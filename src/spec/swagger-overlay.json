{
  "paths":{
    "/v1/trading/r/last24HoursVolume":{
      "get":{
        "title":"24hr Trading Volume",
        "responses":{
          "default":{
            "description":"Returns the trading volume of the last 24 hours.",
            "schema":{
              "type":"object",
              "properties":{
                "totalUSDVolume":{
                  "type":"number",
                  "description":"The total trade volume in terms of USD."
                },
                "tokens":{
                  "type":"object",
                  "description":"List of tokens."
                },
                "symbols":{
                  "type":"object",
                  "description":"List of trading pairs."
                },
                "tokenAmount":{
                  "type":"number",
                  "description":"The trading volume for a particular token."
                },
                "lastUSDPrice":{
                  "type":"number",
                  "description":"The price in USD of the token at the most recent trade."
                },
                "USDValue":{
                  "type":"number",
                  "description":"The corresponding trading volume in USD for a particular token."
                },
                "startDate":{
                  "type":"string",
                  "description":"The start date and time for the volume presented."
                }
              }
            },
            "examples":{
              "application/json":{
                "totalUSDVolume": 143437000,
                "symbols":{
                  "ETH:USDT": {
                    "tokenAmount": 9612.45,
                    "USDVolume": 20437000,
                    "lastUSDPrice": 1145.9,
                    "lastTrade": "2020-05-22T16:37:37.441Z"
                  },
                  "BTC:USDT": {
                    "tokenAmount": 12244.89,
                    "USDVolume": 123000000,
                    "lastUSDPrice": 10045,
                    "lastTrade": "2020-05-22T16:37:37.441Z"
                  }
                },
                "tokens":{
                  "USDT":{
                    "tokenAmount":2956.895948,
                    "USDValue":2956.895948
                  },
                  "DAI":{
                    "tokenAmount":16703.14443817488,
                    "USDValue":16706.132923174882
                  },
                  "ETH":{
                    "tokenAmount":207.84246409836658,
                    "USDValue":34797.96540446898
                  },
                  "MKR":{
                    "tokenAmount":48.32582713775642,
                    "USDValue":25137.12168147688
                  }
                },
                "startDate":"2020-01-19T08:09:45.342Z"
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/24HoursVolume/{Year}/{Month}/{Day}":{
      "get":{
        "title":"Trading Volume History",
        "summary":"Request information regarding the trading volume for a specific date. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per token.",
        "operationId":"getV1TradingR24hoursvolume",
        "parameters":[
          {
            "in":"path",
            "name":"Year",
            "type":"string",
            "required":true,
            "description":"The year of the specific trading volume request date - in this case 2020.",
            "x-example":"2020"
          },
          {
            "in":"path",
            "name":"Month",
            "type":"string",
            "required":true,
            "description":"The month of the specific trading volume request date - in this case 01 (January).",
            "x-example":"01"
          },
          {
            "in":"path",
            "name":"Day",
            "type":"string",
            "required":true,
            "description":"The day of the specific trading volume request date - in this case 01 (1st of a month).",
            "x-example":"01"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair.",
            "schema":{
              "type":"object",
              "properties":{
                "totalUSDVolume":{
                  "type":"number",
                  "description":"The total trade volume in terms of USD."
                },
                "tokens":{
                  "type":"object",
                  "description":"List of tokens."
                },
                "tokenAmount":{
                  "type":"number",
                  "description":"The trading volume for a particular token."
                },
                "USDValue":{
                  "type":"number",
                  "description":"The corresponding trading volume in USD for a particular token."
                },
                "startDate":{
                  "type":"string",
                  "description":"The start date and time for the volume presented."
                },
                "endDate":{
                  "type":"string",
                  "description":"The end date and time for the volume presented."
                }
              }
            },
            "examples":{
              "application/json":{
                "totalUSDVolume":3320.75,
                "tokens":{
                  "USD":{
                    "tokenAmount":3320.75,
                    "USDValue":3320.75
                  },
                  "ETH":{
                    "tokenAmount":24.9495,
                    "USDValue":3320.75
                  }
                },
                "startDate":"2020-01-01T00:00:00.714Z",
                "endDate":"2020-01-02T00:00:00.714Z"
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/tokenRanking":{
      "get":{
        "title":"Volume ranking by token",
        "summary":"This returns a user ranking by trading volume for a chosen token. If the parameters startDate and endDate are provided, the ranking includes only trading volume within that window of time. All volumes are quoted in ETH.",
        "operationId":"getV1PubAllTimeVolumeTokenRanking",
        "parameters":[
          {
            "in":"query",
            "name":"currency",
            "type":"string",
            "required":true,
            "description":"The currency relating to the requested trading volume information.",
            "x-example":"ETH"
          },
          {
            "in":"query",
            "name":"startDate",
            "type":"string",
            "required":false,
            "description":"The start date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "x-example":1527836800000
          },
          {
            "in":"query",
            "name":"endDate",
            "type":"string",
            "required":false,
            "description":"The end date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "x-example":1747384800000
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns a ranked output of all the trading volumes for a given crypto currency. All the Volumes are quoted in ETH.",
            "schema":{
              "type":"object",
              "properties":{
                "address":{
                  "type":"string",
                  "description":"The address of the trader."
                },
                "amount":{
                  "type":"number",
                  "description":"The trading volume for the address"
                }
              }
            },
            "examples":{
              "application/json":[
                {
                  "address":"0xfc898b18a70ce49579f8d79a32e29928c15b4bc8",
                  "amount":852.9290936325145
                },
                {
                  "address":"0x05e3fddf871bcba3f0651fb01fd0d621ad087be2",
                  "amount":243.9949461819435
                },
                {
                  "address":"0x2d9e7f7887bb496592430ef62400dd9007925b88",
                  "amount":100.03447614758483
                },
                {
                  "address":"0x239271f50e1461ad9a4f8114b05e48f229f5c1ae",
                  "amount":0.1
                }
              ]
            }
          }
        }
      }
    },
    "/v1/trading/r/USDRanking":{
      "get":{
        "title":"User ranking by volume",
        "summary":"This returns a user ranking by overall trading volume quoted in USD. If the parameters startDate and endDate are provided, the ranking includes only trading volume within that window of time.",
        "operationId":"getV1PubAllTokensVolumeUSDRanking",
        "parameters":[
          {
            "in":"query",
            "name":"startDate",
            "type":"string",
            "required":false,
            "description":"The start date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "x-example":1577836800000
          },
          {
            "in":"query",
            "name":"endDate",
            "type":"string",
            "required":false,
            "description":"The end date and time (Unix timestamp in milliseconds) for which events are requested.If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "x-example":1747384800000
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Ranked output of all trading volumes for all the tokens.",
            "schema":{
              "type":"object",
              "properties":{
                "address":{
                  "type":"string",
                  "description":"The address of the trader."
                },
                "USDValue":{
                  "type":"number",
                  "description":"The trading volume for the address quoted in USD."
                }
              }
            },
            "examples":{
              "application/json":[
                {
                  "address":"0xfc898b18a70ce49579f8d79a32e29928c15b4bc8",
                  "USDValue":119128.566703
                },
                {
                  "address":"0x05e3fddf871bcba3f0651fb01fd0d621ad087be2",
                  "USDValue":32483.4076365177
                },
                {
                  "address":"0x2d9e7f7887bb496592430ef62400dd9007925b88",
                  "USDValue":13434.22703491727
                }
              ]
            }
          }
        }
      }
    },

    "/v1/trading/r/30DaysVolume": {
      "get":{
        "title":"User 30-day volume",
        "summary":"Request information regarding the trading volume of a specific address for the last 30 days. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per token. Results are cached for 60 minutes.",
        "operationId":"getV1Pub30DaysVolumeSpecificAddress",
        "parameters":[
          {
            "type": "string",
            "description": "This nonce which used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
            "name": "nonce",
            "in": "query",
            "required": true,
            "x-example": "v2-1704114061.000"
          },
          {
            "type": "string",
            "description": "The signature obtained by signing the nonce with your private ethereum key.",
            "name": "signature",
            "in": "query",
            "required": true,
            "x-example": "0x2b48d53f2e3a696630ebdcd1ff057556bbc9de9c294adfaa5b1f13df91b67b347fdd88c29594c377ba0024dec40cd9808829e7f4447772482f50a7a8e9a903561c"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns the trading volume of the last 30 days for a specific address. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair. Results are cached for 60 minutes.",
            "schema":{
              "type":"object",
              "properties":{
                "totalUSDVolume":{
                  "type":"number",
                  "description":"The total trade volume in terms of USD."
                },
                "tokens":{
                  "type":"object",
                  "description":"List of tokens."
                },
                "tokenAmount":{
                  "type":"number",
                  "description":"The trading volume for a particular token."
                },
                "USDValue":{
                  "type":"number",
                  "description":"The corresponding trading volume in USD for a particular token."
                },
                "startDate":{
                  "type":"string",
                  "description":"The start date and time for the volume presented."
                },
                "endDate":{
                  "type":"string",
                  "description":"The end date and time for the volume presented."
                }
              }
            },
            "examples":{
              "application/json":{
                "totalUSDVolume":73364.1749445,
                "tokens":{
                  "USD":{
                    "tokenAmount":85112.899879,
                    "USDValue":85112.899879
                  },
                  "ETH":{
                    "tokenAmount":443.61218170251453,
                    "USDValue":61525.002289
                  }
                },
                "startDate":"2019-12-15T19:09:18.668Z"
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/User24HoursVolume": {
      "get":{
        "title":"User 24-hours volume",
        "summary": "Request information regarding the trading volume of a specific address for the last 24 hours. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per token. Results are cached for 2 minutes.",
        "operationId":"getV1Pub24HoursVolumeSpecificAddress",
        "parameters":[
          {
            "type": "string",
            "description": "This nonce which used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
            "name": "nonce",
            "in": "query",
            "required": true,
            "x-example": "v2-1704114061.000"
          },
          {
            "type": "string",
            "description": "The signature obtained by signing the nonce with your private ethereum key.",
            "name": "signature",
            "in": "query",
            "required": true,
            "x-example": "0x2b48d53f2e3a696630ebdcd1ff057556bbc9de9c294adfaa5b1f13df91b67b347fdd88c29594c377ba0024dec40cd9808829e7f4447772482f50a7a8e9a903561c"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description": "Returns the overall trading volume details of a specific address for all tokens in USD as well as the trading volume per trading pair fot the last 24 hours.",
            "schema":{
              "type":"object",
              "properties":{
                "totalUSDVolume":{
                  "type":"number",
                  "description":"The total trade volume in terms of USD."
                },
                "tokens":{
                  "type":"object",
                  "description":"List of tokens."
                },
                "tokenAmount":{
                  "type":"number",
                  "description":"The trading volume for a particular token."
                },
                "USDValue":{
                  "type":"number",
                  "description":"The corresponding trading volume in USD for a particular token."
                }
              }
            },
            "examples":{
              "application/json":{
                "totalUSDVolume":73364.1749445,
                "tokens":{
                  "USD":{
                    "tokenAmount":85112.899879,
                    "USDValue":85112.899879
                  },
                  "ETH":{
                    "tokenAmount":443.61218170251453,
                    "USDValue":61525.002289
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/estimatedNextBatchTime":{
      "get":{
        "title": "Estimated Next Batch Time",
        "responses":{
          "default":{
            "description" : "Returns the amount of time remaining until the batch is posted to Ethereum.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "estimatedTime" : {
                  "type" : "number",
                  "description" : "The number of seconds until the batch is sent to be processed and broadcast to the blockchain.",
                  "example" : 608
                },
                "averageTime" : {
                  "type" : "number",
                  "description" : "The configured number of seconds between batches.",
                  "example" : 608
                },
                "finalisedBatchPendingConfirmation" : {
                  "type" : "bool",
                  "description" : "True if the previous batch has been created but still pending confirmation on the blockchain.'",
                  "example" : true
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "estimatedTime" : 608,
                "token" : 608,
                "finalisedBatchPendingConfirmation" : true
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getBalance":{
      "post":{
        "title":"Balances",
        "responses":{
          "default":{
            "examples":{
              "application/json":[
                {
                  "balance":1,
                  "activeBalance":0,
                  "_id":"5e318fc4948cc789bb5f7bb4",
                  "ethAddress":"user-01",
                  "token":"ETH"
                },
                {
                  "balance":2,
                  "activeBalance":0,
                  "_id":"5e318fc4948cc789bb5f7bb5",
                  "ethAddress":"user-02",
                  "token":"USD"
                }
              ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getDeposits":{
      "post":{
        "title":"Deposit History",
        "operationId":"postV1TradingRGetdeposits",
        "responses":{
          "default":{
            "examples":{
              "application/json":[
                {
                  "ethAddress":"0x341E46a49F15785373edE443Df0220DEa6a41Bbc",
                  "starkKey":"77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43",
                  "starkVaultId":123,
                  "starkTokenId":"0x7",
                  "token":"USDT",
                  "amount":1000,
                  "createdAt":"2020-01-29T14:02:08.477Z",
                  "isPostedOffchain":false,
                  "isConfirmedOnChain":true
                }
              ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getPendingWithdrawals":{
      "post":{
        "title":"Pending Withdrawals",
        "responses" : {
          "default" : {
            "description" : "Returns all the withdrawals.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "ethAddress" : {
                  "type" : "string",
                  "description" : "Ethereum public address of the user.",
                  "example" : "0x341E46a19F25787373eaE444Df0110DEa6a4127a"
                },
                "token" : {
                  "type" : "string",
                  "description" : "The token that was withdrawn.",
                  "example" : "ETH"
                },
                "amount" : {
                  "type" : "number",
                  "description" : "The amount that was withdrawn.",
                  "example" : 100
                },
                "starkKey" : {
                  "type" : "string",
                  "description" : "The Stark public key of the user.",
                  "example" : "1096391677682140209565436534397888993113230781145932035642834566847897455970"
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "ethAddress" : "0x341E46a19F25787373eaE444Df0110DEa6a4127a",
                "token" : "ETH",
                "amount" : 100,
                "starkKey" : "1096391677682140209565436534397888993113230781145932035642834566847897455970"
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getUserConf":{
      "post":{
        "title":"Get User Config",
        "responses":{
          "default":{
            "examples":{
              "application/json":{
                "DVF": {
                  "defaultFeeRate": 0.002,
                  "deversifiAddress": "0x9ab450355b4ab504cbc0e4de484781dac08e6a26",
                  "starkExContractAddress": "0x94E84779D79E34b9166C850c3123d42C273F8843",
                  "exchangeSymbols": [
                    "tETHUSD",
                    "tZRXUSD",
                    "tZRXETH",
                    "tBTCUSD"
                  ],
                  "tempStarkVaultId": 1
                },
                "tokenRegistry": {
                  "ETH": {
                    "decimals": 18,
                    "quantization": 10000000000,
                    "minOrderSize": 0.05,
                    "starkTokenId": "0xb333e3142fe16b78628f19bb15afddaef437e72d6d7f5c6c20c6801a27fba6",
                    "starkVaultId": 1937164364
                  },
                  "USDT": {
                    "decimals": 6,
                    "quantization": 1,
                    "minOrderSize": 10,
                    "settleSpread": 0,
                    "starkTokenId": "0x180bef8ae3462e919489763b84dc1dc700c45a249dec4d1136814a639f2dd7b",
                    "tokenAddress": "0x4c5f66596197a86fb30a2435e2ef4ddcb39342c9",
                    "starkVaultId": 4937154363
                  },
                  "ZRX": {
                    "decimals": 18,
                    "quantization": 10000000000,
                    "minOrderSize": 20,
                    "starkTokenId": "0x3901ee6a6c5ac0f6e284f4273b961b7e9f29d25367d31d90b75820473a202f7",
                    "tokenAddress": "0xcd077abedd831a3443ffbe24fb76661bbb17eb69"
                  },
                  "BTC": {
                    "decimals": 18,
                    "quantization": 10000000000,
                    "minOrderSize": 0.0004,
                    "starkTokenId": "0x21ef21d6b234cd669edd702dd3d1d017be888337010b950ae3679eb4194b4bc",
                    "tokenAddress": "0x40d8978500bf68324a51533cd6a21e3e59be324a",
                    "starkVaultId": 18264364
                  }
                },
                "isRegistered":true,
                "ethAddress":"0x341e46a49f15785373ede443df0220dea6a41bbc"
              }
              
            }
          }
        }
      }
    },
    "/v1/trading/r/getVaultId":{
      "post":{
        "title":"Get Vault Id"
      }
    },
    "/v1/trading/w/withdraw":{
      "post":{
        "title":"New Withdrawal",
        "responses":{
          "default":{
            "examples":{
              "application/json":{
                "readyToWithdrawOnChain": false,
                "user": "0x52d92399dfb73df49383614170880ba09b66338e",
                "token": "ETH",
                "amount": "210000000",
                "meta": {
                  "starkKey": "00e0326547480bc8bf0fb143f08d23d3ff85aa450e6253bb721dee1410a83b73",
                  "starkVaultId": 1937164364,
                  "starkTokenId": "0xb333e3142fe16b78628f19bb15afddaef437e72d6d7f5c6c20c6801a27fba6",
                  "expireTime": 442438,
                  "starkMessage": "6873517319dc0130cc6910da4bb81ed4cbb800ace9ea759bb46652f0ec21093",
                  "starkSignature": {
                    "r": "59609e8bd25f3a434734b73a28bf581d7bfa211dc8288c235361a9833988272",
                    "s": "5ea8e9bce747bc40ac9b20b38b5905cdd610d5a18145f830d97b2dbcce573a2",
                    "recoveryParam": 1
                  },
                  "nonce": 895561747
                },
                "_id": "JUJRGVb3Wib",
                "createdAt": "2020-05-22T22:23:36.592Z",
                "updatedAt": "2020-05-22T22:23:36.592Z"
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/withdrawHistory":{
      "post":{
        "title":"Withdrawal History"
      }
    },
    "/v1/trading/w/cancelOrder":{
      "post":{
        "title":"Cancel Order"
      }
    },
    "/v1/trading/w/cancelWithdrawal":{
      "post":{
        "title":"Cancel Withdrawal"
      }
    },

    "/v1/trading/w/register":{
      "post":{
        "title":"Register"
      }
    },
    "/v1/trading/w/submitOrder": {
      "post": {
        "title": "Submit Order"
      }
    },
    "/v1/trading/r/publicTradeHistory/{user}": {
      "get": {
        "title": "User Trade History",
        "summary": "This method is used to retrieve a list of all past executed trades for a user. This includes the different trades that have been settled for each fully executed or partially executed order.",
        "operationId": "getV1TradingRPublictradehistoryUser",
        "parameters": [
          {
            "type": "string",
            "description": "The ETH address of a potential user",
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Trading",
          "public"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fillAmount": {
                        "type": "number",
                        "description": "amount filled"
                      },
                      "user": {
                        "type": "string",
                        "description": "User ETH address"
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of the settlement"
                      },
                      "tokenBuy": {
                        "type": "string",
                        "description": "Buy token"
                      },
                      "tokenSell": {
                        "type": "string",
                        "description": "Sell token"
                      },
                      "amountBuy": {
                        "type": "string",
                        "description": "Amount of buy order"
                      },
                      "amountSell": {
                        "type": "string",
                        "description": "Amount of sell order"
                      },
                      "orderId": {
                        "type": "string",
                        "description": "Id of the order"
                      },
                      "feeCurrency": {
                        "type": "string",
                        "description": "Currency of the fee"
                      },
                      "feeAmount": {
                        "type": "string",
                        "description": "Amount of fee"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "items": [
                    {
                      "fillAmount": -0.05,
                      "user": "0x271f6a30fcf762325d3213ce19ed55e7e6a8cac1",
                      "date": "2021-05-06T09:54:33.433Z",
                      "tokenBuy": "USDT",
                      "tokenSell": "ETH",
                      "amountBuy": "9.985",
                      "amountSell": "0.05",
                      "orderId": "MSf8g3RbctU",
                      "feeCurrency": "USDT",
                      "feeAmount": "0.015"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getPublicUserPermissions": {
      "post": {
        "title": "Get Public Permissions",
        "summary": "Used to get all configured permissions for the authenticated user",
        "operationId": "postV1TradingRGetpublicuserpermissions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nonce": {
                  "type": "string",
                  "description": "This nonce which used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                  "example": "v2-1704114061.000"
                },
                "signature": {
                  "type": "string",
                  "description": "The signature obtained by signing the nonce with your private ethereum key.",
                  "example": "0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
                }
              }
            }
          }
        ],
        "tags": [
          "Trading", "public"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "object",
              "properties": {
                "balances": {
                  "type": "boolean",
                  "description": "is balances authorized"
                },
                "tradingHistory": {
                  "type": "boolean",
                  "description": "is trading history authorized"
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "balances": true,
                  "tradingHistory": true
                }
              ]
            }
          }
        }
      }
    },
    "/v1/trading/r/setPublicUserPermissions": {
      "post": {
        "title": "Set Public Permissions",
        "responses": {
          "default": {
            "schema": {
              "type": "object",
              "properties": {
                "balances": {
                  "type": "boolean",
                  "description": "is balances authorized"
                },
                "tradingHistory": {
                  "type": "boolean",
                  "description": "is trading history authorized"
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "balances": true,
                  "tradingHistory": true
                }
              ]
            }
          }
        }
      }
    },
    "/v1/trading/transfers": {
      "get": {
        "title": "Transfers History",
        "operationId": "getV1TradingTransfers",
        "summary": "Returns paginated list of transfers, also supports csv requests",
        "responses": {
          "default": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "totalItems": {
                      "type": "number",
                      "description": "Total number of items matching the query",
                      "example": 1559,
                      "minimum": 0
                    },
                    "limit": {
                      "type": "number",
                      "description": "Limit applied on returned items",
                      "example": 5
                    },
                    "skip": {
                      "type": "number",
                      "description": "Skip applied on returned items",
                      "example": 2
                    }
                  }
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "TransferRequest"
                        ]
                      },
                      "amount": {
                        "type": "string",
                        "pattern": "^[0-9]*$"
                      },
                      "expirationTimestamp": {
                        "type": "integer",
                        "minimum": 0
                      },
                      "nonce": {
                        "type": "integer",
                        "minimum": 0
                      },
                      "receiverPublicKey": {
                        "type": "string",
                        "pattern": "^0x[a-f0-9]+$"
                      },
                      "receiverVaultId": {
                        "type": "integer"
                      },
                      "senderPublicKey": {
                        "type": "string",
                        "pattern": "^0x[a-f0-9]+$"
                      },
                      "senderVaultId": {
                        "type": "integer"
                      },
                      "signature": {
                        "$ref": "#/definitions/signature"
                      },
                      "token": {
                        "type": "string",
                        "pattern": "^0x[a-f0-9]+$"
                      }
                    }
                  }
                }
            }
        },
        "examples": {
          "application/json": {
              "items": [
                {
                  "_id": "KXUPSDQ1arf",
                  "token": "ETH",
                  "amount": 0.3,
                  "recipient": "0x271f6a30fcf762325d3213ce19ed55e7e6a8cac1",
                  "source": "0x271f6a30fcf762325d3213ce19ed55e7e6a8cac1",
                  "date": "2021-03-03T10:46:28.630Z",
                  "feeAmount": 0
                }
              ],
              "pagination": {
                "totalItems": 5,
                "skip": 0,
                "limit": 20
              }
            }
        }
      }
    }
  }
},
"/v1/trading/fills": {
  "get": {
    "title": "Fills History",
    "operationId": "getV1TradingFills",
    "summary": "This method is used to get the history of fills (executed trades) for the authenticated user",
    "responses": {
      "default": {
        "schema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "totalItems": {
                  "type": "number",
                  "description": "Total number of items matching the query",
                  "example": 1559,
                  "minimum": 0
                },
                "limit": {
                  "type": "number",
                  "description": "Limit applied on returned items",
                  "example": 5
                },
                "skip": {
                  "type": "number",
                  "description": "Skip applied on returned items",
                  "example": 2
                }
              }
            },
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier representing this transfer",
                  "example": "MphMkBBZjnS"
                },
                "token": {
                  "type": "string",
                  "description": "Token transfered",
                  "example": "ETH"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount transfered (effective amount received by the recipient)",
                  "example": 3.14,
                  "minimum": 0
                },
                "feeAmount": {
                  "type": "number",
                  "description": "Transfer fee amount (in transfer token units)",
                  "example": 3.14,
                  "minimum": 0
                },
                "source": {
                  "type": "string",
                  "description": "Source Ethereum address",
                  "example": "0x08152c1265dBc218ccc8Ab5C574e6bD52279b3B7"
                },
                "recipient": {
                  "type": "string",
                  "description": "Recipient Ethereum address",
                  "example": "0xeb3ea3ea9239577951523cafa9fd3072bc88e50a"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date and time of the transfer",
                  "example": "1990-04-14T00:20:00.000Z"
                }
              }
            }
          }
        },
        "examples": {
          "application/json": {
              "items": [
                {
                  "price": 190,
                  "fillAmount": -0.1,
                  "symbol": "ETH:USDT",
                  "fillId": "6093ba95ec05a4226816bc3c",
                  "orderId": "Fy1qTx38JMZ",
                  "orderType": "EXCHANGE LIMIT",
                  "orderCreationDate": "2021-05-06T09:44:53.541Z",
                  "orderAmount": -0.1,
                  "date": "2021-05-06T09:44:54.833Z",
                  "orderActive": false,
                  "orderCanceled": false
                },
                {
                  "price": 190,
                  "fillAmount": 0.1,
                  "symbol": "ETH:USDT",
                  "fillId": "6093ba95ec05a4226816bc3b",
                  "orderId": "2fh4oeSZQxW",
                  "orderType": "EXCHANGE LIMIT",
                  "orderCreationDate": "2021-05-06T09:44:35.020Z",
                  "orderAmount": 0.3,
                  "date": "2021-05-06T09:44:54.334Z",
                  "orderActive": false,
                  "orderCanceled": true
                }
              ],
              "pagination": {
                "totalItems": 13,
                "skip": 0,
                "limit": 20
              }
            }
        }
      }
    }
  }
},
    "/market-data/book/{symbol}/{precision}/{length}": {
      "get":{
        "title":"Orderbook",
        "summary":"This public endpoint allows to keep track of the state of DeversiFi orderbooks on a price aggregated basis with customizable precision.",
        "operationId":"getMarketdataBookSymbolPrecisionLength",
        "parameters":[
          {
            "in":"path",
            "name":"symbol",
            "type":"string",
            "required":true,
            "description":"Specifies the trading pair.",
            "x-example":"ETH:USDT"
          },
          {
            "in":"path",
            "name":"precision",
            "type":"string",
            "required":true,
            "description":"Set the price aggregation level. Adjust the precision by entering a value between P0-P4. Use one of the following values - P0, P1, P2, P3, P4.",
            "x-example":"P0"
          },
          {
            "in":"path",
            "name":"length",
            "type":"string",
            "required":true,
            "description":"Set the orderbook length. Adjust the max number of orders to be returned for each side by choosing between either 25 or 250.",
            "x-example":"25"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns a specific order and allows you to keep track of the state of Deversifi order books on a price aggregated basis with customizable precision.",
            "schema":{
              "type":"object",
              "properties":{
                "Price":{
                  "type":"number",
                  "description":"Specifies the price level for trading."
                },
                "Count":{
                  "type":"number",
                  "description":"Number of orders at that price level."
                },
                "Amount":{
                  "type":"number",
                  "description":"Total amount available at that price level."
                }
              }
            },
            "examples":{
              "application/json":[
                [
                  302,
                  1,
                  20
                ],
                [
                  168.02,
                  1,
                  0.6
                ],
                [
                  167.98,
                  1,
                  0.6
                ],
                [
                  167.94,
                  1,
                  0.6
                ]
              ]
            }
          }
        }
      }
    },
    "/market-data/tickers":{
      "get":{
        "title":"Tickers",
        "summary":"The ticker endpoint provides a high level overview of the state of the market for a specified pairs. It shows the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
        "operationId":"getDvfTickers",
        "parameters":[
          {
            "in":"query",
            "name":"symbols",
            "type":"string",
            "required":true,
            "description":"Specify the trading pair. A list of symbols can also be provided. In order to retrieve the results of all trading pairs, the symbol “ALL” should be used. symbols = [\"ZRX:USDT\", \"ETH:USDT\"]",
            "x-example":"ETH:USDT"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
            "schema":{
              "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "symbol":{
                    "type":"string",
                    "description":"The symbol of the requested trading pair."
                  },
                  "bid":{
                    "type":"number",
                    "description":"Price of the most recent highest bid."
                  },
                  "bid_size":{
                    "type":"number",
                    "description":"Sum of the 25 highest bid sizes."
                  },
                  "ask":{
                    "type":"number",
                    "description":"Price of the most recent lowest ask price."
                  },
                  "ask_size":{
                    "type":"number",
                    "description":"Sum of the 25 lowest ask sizes."
                  },
                  "daily_change":{
                    "type":"number",
                    "description":"Amount that the last price has changed since yesterday."
                  },
                  "daily_change_relative":{
                    "type":"number",
                    "description":"Relative price change since yesterday (x 100 for percentage change)."
                  },
                  "last_price":{
                    "type":"number",
                    "description":"Price of the last trade."
                  },
                  "volume":{
                    "type":"number",
                    "description":"Daily volume."
                  },
                  "high":{
                    "type":"number",
                    "description":"Daily high."
                  },
                  "low":{
                    "type":"number",
                    "description":"Daily low."
                  }
                }
              }
            },
            "examples":{
              "application/json":[
                [
                  "BTC:USDT",
                  8719.7,
                  34.58126956,
                  8722.2,
                  32.51991831,
                  263.3,
                  0.0311,
                  8722.3,
                  3798.87390501,
                  8750,
                  8449.3
                ],
                [
                  "LTC:USDT",
                  57.875,
                  1297.95111409,
                  57.931,
                  1670.4711322000003,
                  3.233,
                  0.0592,
                  57.854,
                  33130.37488952,
                  58.18,
                  54.053
                ]
              ]
            }
          }
        }
      }
    },
    "/market-data/ticker/{symbol}": {
      "get":{
        "title":"Ticker",
        "summary":"The ticker endpoint provides a high level overview of the state of the market for a specified pair. It shows the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
        "operationId":"getDvfTicker",
        "parameters":[
          {
            "in":"path",
            "name":"symbol",
            "type":"string",
            "required":true,
            "description":"Specify the trading pair. A list of symbols can also be provided. In order to retrieve the results of all trading pairs, the symbol “ALL” should be used. symbols = [\"ZRX:USDT\", \"ETH:USDT\"]",
            "x-example":"ETH:USDT"
          }
        ],
        "responses":{
          "default":{
            "description":"Returns the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
            "schema":{
              "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "bid":{
                    "type":"number",
                    "description":"Price of the most recent highest bid."
                  },
                  "bid_size":{
                    "type":"number",
                    "description":"Sum of the 25 highest bid sizes."
                  },
                  "ask":{
                    "type":"number",
                    "description":"Price of the most recent lowest ask price."
                  },
                  "ask_size":{
                    "type":"number",
                    "description":"Sum of the 25 lowest ask sizes."
                  },
                  "daily_change":{
                    "type":"number",
                    "description":"Amount that the last price has changed since yesterday."
                  },
                  "daily_change_relative":{
                    "type":"number",
                    "description":"Relative price change since yesterday (x 100 for percentage change)."
                  },
                  "last_price":{
                    "type":"number",
                    "description":"Price of the last trade."
                  },
                  "volume":{
                    "type":"number",
                    "description":"Daily volume."
                  },
                  "high":{
                    "type":"number",
                    "description":"Daily high."
                  },
                  "low":{
                    "type":"number",
                    "description":"Daily low."
                  }
                }
              }
            },
            "examples":{
              "application/json":[
                8719.7,
                34.58126956,
                8722.2,
                32.51991831,
                263.3,
                0.0311,
                8722.3,
                3798.87390501,
                8750,
                8449.3
              ]
            }
          }
        }
      }
    },
    "/market-data/candles/{key}/{section}":{
      "get":{
        "title":"Candles",
        "summary":"The Candles endpoint provides OCHL (Open, Close, High, Low) and volume data for the specified funding currency or trading pair. The endpoint returns the last 100 candles by default, but a limit and a start and/or end timestamp can be specified.",
        "operationId":"getDvfCandles",
        "parameters":[
          {
            "in":"path",
            "name":"key",
            "type":"string",
            "required":true,
            "description":"Is a group of variables defining candles key. First param currently only supports 'trade'. Second param is time frame. Available values are '1m', '5m', '15m', '30m', '1h', '3h', '6h','12h', '1D','7D', '14D', '1M'. And third is the trading pair for which information is required.",
            "x-example":"trade:1m:ETH:USDT"
          },
          {
            "in":"path",
            "name":"section",
            "type":"string",
            "required":true,
            "description":"Section for more precise selection. Available values - \"last\" or \"hist\"",
            "x-example":"hist"
          },
          {
            "in":"query",
            "name":"limit",
            "type":"number",
            "required":false,
            "description":"Limits the number of results. Max 10000",
            "x-example":10
          },
          {
            "in":"query",
            "name":"start",
            "type":"string",
            "required":false,
            "description":"Filter start (time since epoch in ms). Only when section is 'hist'",
            "x-example":"1517923200000"
          },
          {
            "in":"query",
            "name":"end",
            "type":"string",
            "required":false,
            "description":"Filter end (time since epoch in ms). Only when section is 'hist' Defaults to now.",
            "x-example":"1747384800000"
          },
          {
            "in":"query",
            "name":"sort",
            "type":"number",
            "required":false,
            "description":"if = 1 it sorts results returned with old > new",
            "x-example":-1
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns the last 100 candles by default, but a limit and a start and/or end timestamp can be specified.",
            "schema":{
              "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "mts":{
                    "type":"number",
                    "description":"Millisecond timestamp.",
                    "example":1573562880000
                  },
                  "open":{
                    "type":"number",
                    "description":"First execution during the time frame.",
                    "example":3.0178E-4
                  },
                  "close":{
                    "type":"number",
                    "description":"Last execution during the time frame.",
                    "example":3.3105E-4
                  },
                  "high":{
                    "type":"number",
                    "description":"Highest execution during the time frame.",
                    "example":3.3105E-4
                  },
                  "low":{
                    "type":"number",
                    "description":"Lowest execution during the time frame.",
                    "example":3.0178E-4
                  },
                  "volume":{
                    "type":"number",
                    "description":"Quantity of symbol traded within the time frame.",
                    "example":1840.0074507599998
                  }
                }
              }
            },
            "examples":{
              "application/json":[
                [
                  1573562880000,
                  3.0E-4,
                  3.0E-4,
                  3.0E-4,
                  3.0E-4,
                  24083.8638948
                ],
                [
                  1573562820000,
                  3.0178E-4,
                  3.3105E-4,
                  3.3105E-4,
                  3.0178E-4,
                  1840.0074507599998
                ]
              ]
            }
          }
        }
      }
    },
    "{ws-uid-1}/market-data/ws": {
      "ws":{
        "title":"WS Candles",
        "summary":"The Candles websocket provides OCHL (Open, Close, High, Low) and volume data for the specified trading pair. The endpoint returns initially a snapshot of candles and subsequently sends candle updates.",
        "operationId":"WsCandles",
        "parameters":[
          {
            "in":"subscribeMsg",
            "name":"timeframe",
            "type":"string",
            "required":true,
            "description":"Specify time frame. Available values are '1m', '5m', '15m', '30m', '1h', '3h', '6h','12h', '1D','7D', '14D', '1M'.",
            "x-example":"1m"
          },
          {
            "in":"subscribeMsg",
            "name":"symbol",
            "type":"string",
            "required":true,
            "description":"Specify the trading pair for which information is required.",
            "x-example":"ETH:USDT"
          },
          {
            "in":"subscribeMsg",
            "name":"type",
            "type":"string",
            "required":true,
            "description":"Section for more precise selection. Available values - \"trade\"",
            "x-example":"trade"
          },
          {
            "in":"subscribeMsg",
            "name":"event",
            "type":"string",
            "required":true,
            "description":"Specify client event type. Available values - \"subscribe\"",
            "x-example":"subscribe"
          },
          {
            "in":"subscribeMsg",
            "name":"channel",
            "type":"string",
            "required":true,
            "description":"Type of channel to subscribe to. Available values - \"candles\"",
            "x-example":"candles"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns the last 100 candles by default, but a limit and a start and/or end timestamp can be specified.",
            "schema":{
              "type":"array",
              "items":{
                "type":"object",
                "properties": {
                  "chanId":{
                    "type":"number",
                    "description":"Number representing subscription. (First element of root array)",
                    "example":1
                  },
                  "mts":{
                    "type":"number",
                    "description":"Millisecond timestamp.",
                    "example":1573562880000
                  },
                  "open":{
                    "type":"number",
                    "description":"First execution during the time frame.",
                    "example":3.0178E-4
                  },
                  "close":{
                    "type":"number",
                    "description":"Last execution during the time frame.",
                    "example":3.3105E-4
                  },
                  "high":{
                    "type":"number",
                    "description":"Highest execution during the time frame.",
                    "example":3.3105E-4
                  },
                  "low":{
                    "type":"number",
                    "description":"Lowest execution during the time frame.",
                    "example":3.0178E-4
                  },
                  "volume":{
                    "type":"number",
                    "description":"Quantity of symbol traded within the time frame.",
                    "example":1840.0074507599998
                  }
                }
              }
            },
            "examples":{
              "application/json":[
                1,
                [
                  [
                    1573562880000,
                    3.0E-4,
                    3.0E-4,
                    3.0E-4,
                    3.0E-4,
                    24083.8638948
                  ],
                  [
                    1573562820000,
                    3.0178E-4,
                    3.3105E-4,
                    3.3105E-4,
                    3.0178E-4,
                    1840.0074507599998
                  ]
                ]
              ]
            }
          }
        }
      }
    },
    "{ws-uid-2}/market-data/ws":{
      "ws":{
        "title":"WS Ticker",
        "summary":"The ticker endpoint provides a high level overview of the state of the market for a specified pair. It shows the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
        "operationId":"WsTicker",
        "parameters":[
          {
            "in":"subscribeMsg",
            "name":"symbol",
            "type":"string",
            "required":true,
            "description":"Specify the trading pair.",
            "x-example":"ETH:USDT"
          },
          {
            "in":"subscribeMsg",
            "name":"event",
            "type":"string",
            "required":true,
            "description":"Specify client event type. Available values - \"subscribe\"",
            "x-example":"subscribe"
          },
          {
            "in":"subscribeMsg",
            "name":"channel",
            "type":"string",
            "required":true,
            "description":"Type of channel to subscribe to. Available values - \"ticker\"",
            "x-example":"ticker"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
            "schema":{
              "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "chanId":{
                    "type":"number",
                    "description":"Number representing subscription. (First element of root array)",
                    "example":1
                  },
                  "bid":{
                    "type":"number",
                    "description":"Price of the most recent highest bid."
                  },
                  "bid_size":{
                    "type":"number",
                    "description":"Sum of the 25 highest bid sizes."
                  },
                  "ask":{
                    "type":"number",
                    "description":"Price of the most recent lowest ask price."
                  },
                  "ask_size":{
                    "type":"number",
                    "description":"Sum of the 25 lowest ask sizes."
                  },
                  "daily_change":{
                    "type":"number",
                    "description":"Amount that the last price has changed since yesterday."
                  },
                  "daily_change_relative":{
                    "type":"number",
                    "description":"Relative price change since yesterday (x 100 for percentage change)."
                  },
                  "last_price":{
                    "type":"number",
                    "description":"Price of the last trade."
                  },
                  "volume":{
                    "type":"number",
                    "description":"Daily volume."
                  },
                  "high":{
                    "type":"number",
                    "description":"Daily high."
                  },
                  "low":{
                    "type":"number",
                    "description":"Daily low."
                  }
                }
              }
            },
            "examples":{
              "application/json":[
                1,
                [
                  8719.7,
                  34.58126956,
                  8722.2,
                  32.51991831,
                  263.3,
                  0.0311,
                  8722.3,
                  3798.87390501,
                  8750,
                  8449.3
                ]
              ]
            }
          }
        }
      }
    },
    "{ws-uid-3}/market-data/ws":{
      "ws":{
        "title":"WS Orderbook",
        "summary":"This public endpoint allows to keep track of the state of DeversiFi orderbooks.",
        "operationId":"WsBook",
        "parameters":[
          {
            "in":"subscribeMsg",
            "name":"symbol",
            "type":"string",
            "required":true,
            "description":"Specify the trading pair. A list of symbols can also be provided. In order to retrieve the results of all trading pairs, the symbol “ALL” should be used. symbols = [\"MKR:ETH\", \"ETH:USDT\"]",
            "x-example":"ETH:USDT"
          },
          {
            "in":"subscribeMsg",
            "name":"event",
            "type":"string",
            "required":true,
            "description":"Specify client event type. Available values - \"subscribe\"",
            "x-example":"subscribe"
          },
          {
            "in":"subscribeMsg",
            "name":"channel",
            "type":"string",
            "required":true,
            "description":"Type of channel to subscribe to. Available values - \"book\"",
            "x-example":"book"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "description":"Returns a specific order and allows you to keep track of the state of Deversifi order books on a price aggregated basis with customizable precision.",
            "schema":{
              "type":"object",
              "properties":{
                "chanId":{
                  "type":"number",
                  "description":"Number representing subscription. (First element of root array)",
                  "example":1
                },
                "Price":{
                  "type":"number",
                  "description":"Specifies the price level for trading."
                },
                "Count":{
                  "type":"number",
                  "description":"Number of orders at that price level."
                },
                "Amount":{
                  "type":"number",
                  "description":"Total amount available at that price level."
                }
              }
            },
            "examples":{
              "application/json":[
                1,
                [
                  302,
                  1,
                  20
                ],
                [
                  168.02,
                  1,
                  0.6
                ],
                [
                  167.98,
                  1,
                  0.6
                ],
                [
                  167.94,
                  1,
                  0.6
                ]
              ]
            }
          }
        }
      }
    }
  }
}
