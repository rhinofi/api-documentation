{
  "swagger" : "2.0",
  "host" : "api.deversifi.dev",
  "basePath" : "/",
  "schemes" : [ "https" ],
  "info" : {
    "title" : "Deversifi API documentation",
    "version" : "1.0.0",
    "description" : "dvf-pub-api"
  },
  "tags" : [ ],
  "paths" : {
    "/v1/pub/last24HoursVolume" : {
      "get" : {
        "title": "24hr Trading Volume",
        "summary" : "Request information regarding the trading volume for the last 24 hours. The request returns the overall trading volume details in USD as well as the trading volume per token in USD and the native token.",
        "operationId" : "getV1PubLast24HoursVolume",
        "tags" : [ "Market" ],
        "responses" : {
          "default" : {
            "description" : "Returns the trading volume of the last 24 hours.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "TotalUSDValue" : {
                  "type" : "number",
                  "description" : "The total trade volume in terms of USD."
                },
                "tokens" : {
                  "type" : "object",
                  "description" : "List of tokens."
                },
                "tokenAmount" : {
                  "type" : "number",
                  "description" : "The trading volume for a particular token."
                },
                "USDValue" : {
                  "type" : "number",
                  "description" : "The corresponding trading volume in USD for a particular token."
                },
                "startDate" : {
                  "type" : "string",
                  "description" : "The start date and time for the volume presented."
                }
              }
            },
            "examples" : {
              "application/json" : {
                "TotalUSDValue" : 49060.93499764386,
                "tokens" : {
                  "USD" : {
                    "tokenAmount" : 2956.895948,
                    "USDValue" : 2956.895948
                  },
                  "DAI" : {
                    "tokenAmount" : 16703.14443817488,
                    "USDValue" : 16706.132923174882
                  },
                  "ETH" : {
                    "tokenAmount" : 207.84246409836658,
                    "USDValue" : 34797.96540446898
                  },
                  "NEC" : {
                    "tokenAmount" : 231870.3805543381,
                    "USDValue" : 18523.75403816698
                  },
                  "MKR" : {
                    "tokenAmount" : 48.32582713775642,
                    "USDValue" : 25137.12168147688
                  }
                },
                "startDate" : "2020-01-19T08:09:45.342Z"
              }
            }
          }
        }
      }
    },
    "/v1/pub/24HoursVolume/{Year}/{Month}/{Day}" : {
      "get" : {
        "title": "Historic Trading Volume",
        "summary" : "Request information regarding the trading volume for a specific date. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per token.",
        "operationId" : "getV1Pub24HoursVolume",
        "parameters" : [ {
          "in" : "path",
          "name" : "Year",
          "type" : "string",
          "required" : true,
          "description" : "The year of the specific trading volume request date - in this case 2020.",
          "x-example" : "2020"
        }, {
          "in" : "path",
          "name" : "Month",
          "type" : "string",
          "required" : true,
          "description" : "The month of the specific trading volume request date - in this case 01 (January).",
          "x-example" : "01"
        }, {
          "in" : "path",
          "name" : "Day",
          "type" : "string",
          "required" : true,
          "description" : "The day of the specific trading volume request date - in this case 01 (1st of a month).",
          "x-example" : "01"
        } ],
        "tags" : [ "Market" ],
        "responses" : {
          "default" : {
            "description" : "Returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "TotalUSDValue" : {
                  "type" : "number",
                  "description" : "The total trade volume in terms of USD."
                },
                "tokens" : {
                  "type" : "object",
                  "description" : "List of tokens."
                },
                "tokenAmount" : {
                  "type" : "number",
                  "description" : "The trading volume for a particular token."
                },
                "USDValue" : {
                  "type" : "number",
                  "description" : "The corresponding trading volume in USD for a particular token."
                },
                "startDate" : {
                  "type" : "string",
                  "description" : "The start date and time for the volume presented."
                },
                "endDate" : {
                  "type" : "string",
                  "description" : "The end date and time for the volume presented."
                }
              }
            },
            "examples" : {
              "application/json" : {
                "TotalUSDValue" : 3320.75,
                "tokens" : {
                  "USD" : {
                    "tokenAmount" : 3320.75,
                    "USDValue" : 3320.75
                  },
                  "ETH" : {
                    "tokenAmount" : 24.9495,
                    "USDValue" : 3320.75
                  }
                },
                "startDate" : "2020-01-01T00:00:00.714Z",
                "endDate" : "2020-01-02T00:00:00.714Z"
              }
            }
          }
        }
      }
    },
    "/v1/pub/tokenRanking/{currency}" : {
      "get" : {
        "title": "Volume ranking by token",
        "summary" : "This returns a user ranking by trading volume for a chosen token. If the parameters startDate and endDate are provided, the ranking includes only trading volume within that window of time. All volumes are quoted in ETH.",
        "operationId" : "getV1PubAllTimeVolumeTokenRanking",
        "parameters" : [ {
          "in" : "path",
          "name" : "currency",
          "type" : "string",
          "required" : true,
          "description" : "The currency relating to the requested trading volume information.",
          "x-example" : "ETH"
        }, {
          "in" : "query",
          "name" : "startDate",
          "type" : "string",
          "required" : false,
          "description" : "The start date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
          "x-example" : 1527836800000
        }, {
          "in" : "query",
          "name" : "endDate",
          "type" : "string",
          "required" : false,
          "description" : "The end date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
          "x-example" : 1577923200000
        } ],
        "tags" : [ "Market" ],
        "responses" : {
          "default" : {
            "description" : "Returns a ranked output of all the trading volumes for a given crypto currency. All the Volumes are quoted in ETH.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "description" : "The address of the trader."
                },
                "amount" : {
                  "type" : "number",
                  "description" : "The trading volume for the address"
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "address" : "0xfc898b18a70ce49579f8d79a32e29928c15b4bc8",
                "amount" : 852.9290936325145
              }, {
                "address" : "0x05e3fddf871bcba3f0651fb01fd0d621ad087be2",
                "amount" : 243.9949461819435
              }, {
                "address" : "0x2d9e7f7887bb496592430ef62400dd9007925b88",
                "amount" : 100.03447614758483
              }, {
                "address" : "0x239271f50e1461ad9a4f8114b05e48f229f5c1ae",
                "amount" : 0.1
              } ]
            }
          }
        }
      }
    },
    "/v1/pub/USDRanking" : {
      "get" : {
        "title": "User ranking by volume",
        "summary" : "This returns a user ranking by overall trading volume quoted in USD. If the parameters startDate and endDate are provided, the ranking includes only trading volume within that window of time.",
        "operationId" : "getV1PubAllTokensVolumeUSDRanking",
        "parameters" : [ {
          "in" : "query",
          "name" : "startDate",
          "type" : "string",
          "required" : false,
          "description" : "The start date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
          "x-example" : 1577836800000
        }, {
          "in" : "query",
          "name" : "endDate",
          "type" : "string",
          "required" : false,
          "description" : "The end date and time (Unix timestamp in milliseconds) for which events are requested.If startDate and endDate are not provided, it returns the volume ranking if all time.",
          "x-example" : 1577923200000
        } ],
        "tags" : [ "Market" ],
        "responses" : {
          "default" : {
            "description" : "Ranked output of all trading volumes for all the tokens.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "description" : "The address of the trader."
                },
                "USDValue" : {
                  "type" : "number",
                  "description" : "The trading volume for the address quoted in USD."
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "address" : "0xfc898b18a70ce49579f8d79a32e29928c15b4bc8",
                "USDValue" : 119128.566703
              }, {
                "address" : "0x05e3fddf871bcba3f0651fb01fd0d621ad087be2",
                "USDValue" : 32483.4076365177
              }, {
                "address" : "0x2d9e7f7887bb496592430ef62400dd9007925b88",
                "USDValue" : 13434.22703491727
              } ]
            }
          }
        }
      }
    },
    "/v1/pub/30DaysVolume/{Address}" : {
      "get" : {
        "title": "User 30-day volume",
        "summary" : "Request information regarding the trading volume of a specific address for the last 30 days. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per token. Results are cached for 60 minutes.",
        "operationId" : "getV1Pub30DaysVolumeSpecificAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "Address",
          "type" : "string",
          "required" : true,
          "description" : "This is the specific address for which the  30 day trading volume is requested for.",
          "x-example" : "0xfc898b18a70ce49579f8d79a32e29928c15b4bc8"
        } ],
        "tags" : [ "Market" ],
        "responses" : {
          "default" : {
            "description" : "Returns the trading volume of the last 30 days for a specific address. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair. Results are cached for 60 minutes.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "TotalUSDValue" : {
                  "type" : "number",
                  "description" : "The total trade volume in terms of USD."
                },
                "tokens" : {
                  "type" : "object",
                  "description" : "List of tokens."
                },
                "tokenAmount" : {
                  "type" : "number",
                  "description" : "The trading volume for a particular token."
                },
                "USDValue" : {
                  "type" : "number",
                  "description" : "The corresponding trading volume in USD for a particular token."
                },
                "startDate" : {
                  "type" : "string",
                  "description" : "The start date and time for the volume presented."
                },
                "endDate" : {
                  "type" : "string",
                  "description" : "The end date and time for the volume presented."
                }
              }
            },
            "examples" : {
              "application/json" : {
                "TotalUSDValue" : 73364.1749445,
                "tokens" : {
                  "USD" : {
                    "tokenAmount" : 85112.899879,
                    "USDValue" : 85112.899879
                  },
                  "ETH" : {
                    "tokenAmount" : 443.61218170251453,
                    "USDValue" : 61525.002289
                  },
                  "NEC" : {
                    "tokenAmount" : 1173.0238160813603,
                    "USDValue" : 90.447721
                  }
                },
                "startDate" : "2019-12-15T19:09:18.668Z"
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/getConf" : {
      "post" : {
        "title": "Get Config",
        "summary" : "Returns the DeversiFi application configuration details.",
        "operationId" : "postV1TradingRGetconf",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nonce" : {
                "type" : "number",
                "description" : "A user generated nonce.",
                "example" : 1579901055575
              },
              "signature" : {
                "type" : "string",
                "description" : "The signed hash (signature) received during the pre-registration process.",
                "example" : "0x494a2c166f95518dcf5a9484fcb702a454382f281f96ba41639fe3a2af279fdc1e3b4e5aa2f585a9a40fb5aaabf10b5390ed5592d502c7799a261f81219491f001"
              }
            },
            "required" : [ "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the DeversiFi application configuration details.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "DVF" : {
                  "type" : "object",
                  "description" : "This contains application configuration details per currency that the user has deposited for trade.",
                  "properties" : {
                    "depositExpiry" : {
                      "type" : "number",
                      "description" : "Expiry period for deposit. The unit is in hours.",
                      "example" : 720
                    },
                    "depositNonce" : {
                      "type" : "number",
                      "description" : "Nonce used for the deposit.",
                      "example" : 1
                    },
                    "deversifiAddress" : {
                      "type" : "string",
                      "description" : "The address of the DeversiFi exchange.",
                      "example" : "0x9ab450355b4ab504cbc0e4de484781dac08e6a26"
                    },
                    "starkExContractAddress" : {
                      "type" : "string",
                      "description" : "Stark contract address.",
                      "example" : "0xF3731d0cdC9834f6F32104580bD226EF1bc1A9F9"
                    },
                    "exchangeSymbols" : {
                      "type" : "string",
                      "description" : "Currency pairs available at the DeversiFi exchange for trade.",
                      "example" : "['tETHUSD','tZRXUSD','tZRXETH']"
                    },
                    "tempStarkVaultId" : {
                      "type" : "number",
                      "description" : "Temporary Stark vault ID.",
                      "example" : 1
                    }
                  }
                },
                "tokenRegsitry" : {
                  "type" : "object",
                  "description" : "Detailed information related to each available token.",
                  "properties" : {
                    "currency_symbol" : {
                      "type" : "object",
                      "description" : "The currency symbol along with details such as decimals, minOrderSize, startTokenId, settleSpread and tokenAddress.",
                      "properties" : {
                        "decimals" : {
                          "type" : "number",
                          "description" : "Decimal places used.",
                          "example" : 18
                        },
                        "minOrderSize" : {
                          "type" : "number",
                          "description" : "Acceptable size of minimum order.",
                          "example" : 0.1
                        },
                        "starkTokenId" : {
                          "type" : "string",
                          "description" : "Stark token ID.",
                          "example" : "0x1"
                        },
                        "settleSpread" : {
                          "type" : "number",
                          "description" : "The acceptable spread specified.",
                          "example" : -0.026
                        },
                        "tokenAddress" : {
                          "type" : "string",
                          "description" : "Address of the token.",
                          "example" : "0xdac17f958d2ee523a2206206994597c13d831ec7"
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples" : {
              "application/json" : {
                "DVF" : {
                  "exchangeSymbols" : [ "tETHUSD", "tZRXUSD", "tZRXETH" ],
                  "exchangeAddress" : "0xBd25cD867C304F079E696CBE44D958f3d3B683ba",
                  "starkExContractAddress" : "0xF3731d0cdC9834f6F32104580bD226EF1bc1A9F9",
                  "tempStarkVaultId" : 1,
                  "depositExpiry" : 720,
                  "depositNonce" : 1
                },
                "tokenRegistry" : {
                  "ETH" : {
                    "decimals" : 18,
                    "minOrderSize" : 0.1,
                    "starkTokenId" : "0x1"
                  },
                  "USDT" : {
                    "decimals" : 6,
                    "tokenAddress" : "0xdac17f958d2ee523a2206206994597c13d831ec7",
                    "minOrderSize" : 25,
                    "settleSpread" : -0.026,
                    "starkTokenId" : "0x2"
                  },
                  "ZRX" : {
                    "decimals" : 16,
                    "tokenAddress" : "0xe41d2489571d322189246dafa5ebde1f4699f498",
                    "minOrderSize" : 40,
                    "starkTokenId" : "0x22e6d888f32dea3c6e8ba64609a314eebbe1eb704e9e9febe368b0bacb21efe"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/getUserConf" : {
      "post" : {
        "title": "Get User Config",
        "summary" : "Returns the DeversiFi application and user configuration details.",
        "operationId" : "postV1TradingRGetUserConf",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nonce" : {
                "type" : "number",
                "description" : "A user generated nonce.",
                "example" : 1579901055575
              },
              "signature" : {
                "type" : "string",
                "description" : "The signed hash (signature) received during the pre-registration process.",
                "example" : "0x494a2c166f95518dcf5a9484fcb702a454382f281f96ba41639fe3a2af279fdc1e3b4e5aa2f585a9a40fb5aaabf10b5390ed5592d502c7799a261f81219491f001"
              }
            },
            "required" : [ "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the DeversiFi application as well as the user configuration details.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "DVF" : {
                  "type" : "object",
                  "description" : "This contains application configuration details per currency that the user has deposited for trade.",
                  "properties" : {
                    "depositExpiry" : {
                      "type" : "number",
                      "description" : "Expiry period for deposit. The unit is in hours.",
                      "example" : 720
                    },
                    "depositNonce" : {
                      "type" : "number",
                      "description" : "Nonce used for the deposit.",
                      "example" : 1
                    },
                    "deversifiAddress" : {
                      "type" : "string",
                      "description" : "The address of the DeversiFi exchange.",
                      "example" : "0x9ab450355b4ab504cbc0e4de484781dac08e6a26"
                    },
                    "starkExContractAddress" : {
                      "type" : "string",
                      "description" : "Stark contract address.",
                      "example" : "0xF3731d0cdC9834f6F32104580bD226EF1bc1A9F9"
                    },
                    "exchangeSymbols" : {
                      "type" : "string",
                      "description" : "Currency pairs available at the DeversiFi exchange for trade.",
                      "example" : "['tETHUSD','tZRXUSD','tZRXETH']"
                    },
                    "tempStarkVaultId" : {
                      "type" : "number",
                      "description" : "Temporary Stark vault ID.",
                      "example" : 1
                    }
                  }
                },
                "tokenRegsitry" : {
                  "type" : "object",
                  "description" : "Detailed information related to each available token.",
                  "properties" : {
                    "currency_symbol" : {
                      "type" : "object",
                      "description" : "The currency symbol along with details such as decimals, minOrderSize, startTokenId, settleSpread and tokenAddress.",
                      "properties" : {
                        "decimals" : {
                          "type" : "number",
                          "description" : "Decimal places used.",
                          "example" : 18
                        },
                        "minOrderSize" : {
                          "type" : "number",
                          "description" : "Acceptable size of minimum order.",
                          "example" : 0.1
                        },
                        "starkTokenId" : {
                          "type" : "string",
                          "description" : "Stark token ID.",
                          "example" : "0x1"
                        },
                        "settleSpread" : {
                          "type" : "number",
                          "description" : "The acceptable spread specified.",
                          "example" : -0.026
                        },
                        "tokenAddress" : {
                          "type" : "string",
                          "description" : "Address of the token.",
                          "example" : "0xdac17f958d2ee523a2206206994597c13d831ec7"
                        }
                      }
                    }
                  }
                },
                "spareStarkVaultId" : {
                  "type" : "number",
                  "description" : "Vault ID of the spare Stark key.",
                  "example" : 1005108736
                },
                "ethAddress" : {
                  "type" : "string",
                  "description" : "Ethereum address.",
                  "example" : "0x278ff3bb25c5b1bb7032e822661974479280fa74"
                }
              }
            },
            "examples" : {
              "application/json" : {
                "DVF" : {
                  "depositExpiry" : 720,
                  "depositNonce" : 1,
                  "deversifiAddress" : "0x9ab450355b4ab504cbc0e4de484781dac08e6a26",
                  "starkExContractAddress" : "0xF3731d0cdC9834f6F32104580bD226EF1bc1A9F9",
                  "exchangeSymbols" : [ "tETHUSD", "tZRXUSD", "tZRXETH" ],
                  "tempStarkVaultId" : 1
                },
                "tokenRegistry" : {
                  "ETH" : {
                    "decimals" : 18,
                    "minOrderSize" : 0.1,
                    "starkTokenId" : "0x1"
                  },
                  "USD" : {
                    "decimals" : 6,
                    "minOrderSize" : 25,
                    "settleSpread" : -0.026,
                    "starkTokenId" : "0x2",
                    "tokenAddress" : "0xdac17f958d2ee523a2206206994597c13d831ec7"
                  },
                  "ZRX" : {
                    "decimals" : 18,
                    "minOrderSize" : 40,
                    "starkTokenId" : "22e6d888f32dea3c6e8ba64609a314eebbe1eb704e9e9febe368b0bacb21efe",
                    "tokenAddress" : "0xe41d2489571d322189246dafa5ebde1f4699f498"
                  }
                },
                "spareStarkVaultId" : 686986452,
                "ethAddress" : "0x341e46a49f15785373ede443df0220dea6a41bbc"
              }
            }
          }
        }
      }
    },
    "/v1/trading/w/preRegister" : {
      "post" : {
        "title": "Pre-register",
        "summary" : "This method is used to bind a Stark public key to a corresponding Ethereum public address. A signed hash is received as an acknowledgement of the binding. The signed hash is required for the registration process.",
        "operationId" : "postV1TradingWPreRegister",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "starkKey" : {
                "type" : "string",
                "description" : "The Stark public key.",
                "example" : "6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075"
              },
              "ethAddress" : {
                "type" : "string",
                "description" : "The Ethereum public address required for the pre-registration.",
                "example" : "0x341E46a49F15785373edE443Df0220DEa6a41Bbc"
              }
            },
            "required" : [ "starkKey", "ethAddress" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns a signed hash that confirms the binding.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "deFiSignature" : {
                  "type" : "string",
                  "description" : "This signature hash is required in order to complete the registration process. This signature states that DeversiFi is aware of the binding between a Stark key and ethereum address."
                }
              }
            },
            "examples" : {
              "application/json" : {
                "deFiSignature" : "0x187d2b7927af5b4902f204e3e1dbe14bb6af28fa30d61d4d9c6a4cf5f4a985547d9150befbd1a4ee82ded653cf7b2988591c28cdaccdbc1e4a6adae7ead759d61b"
              }
            }
          }
        }
      }
    },
    "/v1/trading/w/register" : {
      "post" : {
        "title": "Register",
        "summary" : "This method is used to register a Stark key that corresponds to an Ethereum public address, and retrieve DeversiFi application as well as user configuration details. It is important to perform “Pre-registration” before this step.",
        "operationId" : "postV1TradingWRegister",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "starkKey" : {
                "type" : "string",
                "description" : "The Stark public key.",
                "example" : "6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075"
              },
              "nonce" : {
                "type" : "number",
                "description" : "A user generated nonce.",
                "example" : 1.579783140807E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signed hash (signature) received during the pre-registration process.",
                "example" : "0x7e83e5fb1eb382d06906efa984a1cbf9c7a5bd301cbbbfa68d5d23624f9d301358329465291f5b72a9680687badf8f01a474193bd738add3d89e8d7e0e034b2b00"
              }
            },
            "required" : [ "starkKey", "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the DeversiFi application as well as the user configuration details.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "DVF" : {
                  "type" : "object",
                  "description" : "This contains application configuration details per currency that the user has deposited for trade.",
                  "properties" : {
                    "depositExpiry" : {
                      "type" : "number",
                      "description" : "Expiry period for deposit. The unit is in hours.",
                      "example" : 720
                    },
                    "depositNonce" : {
                      "type" : "number",
                      "description" : "Nonce used for the deposit.",
                      "example" : 1
                    },
                    "deversifiAddress" : {
                      "type" : "string",
                      "description" : "The address of the DeversiFi exchange.",
                      "example" : "0x9ab450355b4ab504cbc0e4de484781dac08e6a26"
                    },
                    "starkExContractAddress" : {
                      "type" : "string",
                      "description" : "Stark contract address.",
                      "example" : "0xF3731d0cdC9834f6F32104580bD226EF1bc1A9F9"
                    },
                    "exchangeSymbols" : {
                      "type" : "string",
                      "description" : "Currency pairs available at the DeversiFi exchange for trade.",
                      "example" : "['tETHUSD','tZRXUSD','tZRXETH']"
                    },
                    "tempStarkVaultId" : {
                      "type" : "number",
                      "description" : "Temporary Stark vault ID.",
                      "example" : 1
                    }
                  }
                },
                "tokenRegsitry" : {
                  "type" : "object",
                  "description" : "Detailed information related to each available token.",
                  "properties" : {
                    "currency_symbol" : {
                      "type" : "object",
                      "description" : "The currency symbol along with details such as decimals, minOrderSize, startTokenId, settleSpread and tokenAddress.",
                      "properties" : {
                        "decimals" : {
                          "type" : "number",
                          "description" : "Decimal places used.",
                          "example" : 18
                        },
                        "minOrderSize" : {
                          "type" : "number",
                          "description" : "Acceptable size of minimum order.",
                          "example" : 0.1
                        },
                        "starkTokenId" : {
                          "type" : "string",
                          "description" : "Stark token ID.",
                          "example" : "0x1"
                        },
                        "settleSpread" : {
                          "type" : "number",
                          "description" : "The acceptable spread specified.",
                          "example" : -0.026
                        },
                        "tokenAddress" : {
                          "type" : "string",
                          "description" : "Address of the token.",
                          "example" : "0xdac17f958d2ee523a2206206994597c13d831ec7"
                        }
                      }
                    }
                  }
                },
                "spareStarkVaultId" : {
                  "type" : "number",
                  "description" : "Vault ID of the spare Stark key.",
                  "example" : 1005108736
                },
                "ethAddress" : {
                  "type" : "string",
                  "description" : "Ethereum address.",
                  "example" : "0x278ff3bb25c5b1bb7032e822661974479280fa74"
                }
              }
            },
            "examples" : {
              "application/json" : {
                "DVF" : {
                  "depositExpiry" : 720,
                  "depositNonce" : 1,
                  "deversifiAddress" : "0x9ab450355b4ab504cbc0e4de484781dac08e6a26",
                  "starkExContractAddress" : "0xF3731d0cdC9834f6F32104580bD226EF1bc1A9F9",
                  "exchangeSymbols" : [ "tETHUSD", "tZRXUSD", "tZRXETH" ],
                  "tempStarkVaultId" : 1
                },
                "tokenRegistry" : {
                  "ETH" : {
                    "decimals" : 18,
                    "minOrderSize" : 0.1,
                    "starkTokenId" : "0x1"
                  },
                  "USD" : {
                    "decimals" : 6,
                    "minOrderSize" : 25,
                    "settleSpread" : -0.026,
                    "starkTokenId" : "0x2",
                    "tokenAddress" : "0xdac17f958d2ee523a2206206994597c13d831ec7"
                  },
                  "ZRX" : {
                    "decimals" : 18,
                    "minOrderSize" : 40,
                    "starkTokenId" : "22e6d888f32dea3c6e8ba64609a314eebbe1eb704e9e9febe368b0bacb21efe",
                    "tokenAddress" : "0xe41d2489571d322189246dafa5ebde1f4699f498"
                  }
                },
                "spareStarkVaultId" : 686986452,
                "ethAddress" : "0x341e46a49f15785373ede443df0220dea6a41bbc"
              }
            }
          }
        }
      }
    },
    "/v1/trading/w/deposit" : {
      "post" : {
        "title": "Deposit",
        "summary" : "Submit a notification of a new deposit made.",
        "operationId" : "postV1TradingWDeposit",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "token" : {
                "type" : "string",
                "description" : "The token for which the deposit was made.",
                "example" : "ZRX"
              },
              "amount" : {
                "type" : "number",
                "description" : "The deposit amount.",
                "example" : 1
              },
              "starkKey" : {
                "type" : "object",
                "description" : "The Stark public key. Both the \"x\" and \"y\" part are required.",
                "properties" : {
                  "x" : {
                    "type" : "string",
                    "description" : "The \"x\" part of the Stark public key.",
                    "example" : "6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075"
                  },
                  "y" : {
                    "type" : "string",
                    "description" : "The \"y\" part of the Stark public key.",
                    "example" : "58f7ce5eb6eb5bd24f70394622b1f4d2c54ebca317a3e61bf9f349dccf166cf"
                  }
                }
              },
              "starkSignature" : {
                "type" : "object",
                "description" : "Stark signature consisting of consisting of \"r\", \"s\" and the recovery parameter.",
                "properties" : {
                  "r" : {
                    "type" : "string",
                    "description" : "The \"r\" part of the Stark signature.",
                    "example" : "1f38f551d798562c16d28733c7e3ff6850898d82f0ac9ccd39d373303b1778c"
                  },
                  "s" : {
                    "type" : "string",
                    "description" : "The \"s\" part of the Stark signature.",
                    "example" : "518560420e52a37e9f580f024fc0fe8572cb2f5437a839075bbf4b2b123d572"
                  },
                  "recoveryParam" : {
                    "type" : "number",
                    "description" : "The recovery parameter of the Stark signature.",
                    "example" : 1
                  }
                }
              },
              "starkVaultId" : {
                "type" : "number",
                "description" : "The Stark vault ID.",
                "example" : 1000003
              }
            },
            "required" : [ "token", "amount", "starkKey", "starkSignature", "recoveryParam", "starkVaultId" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the deposit notifcation.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "isPostedOffchain" : {
                  "type" : "boolean",
                  "description" : "Flag to indicate if the deposit was posted off chain.",
                  "example" : false
                },
                "isConfirmedOnChain" : {
                  "type" : "boolean",
                  "description" : "Flag to indicate if the deposit was confirmed on chain.",
                  "example" : true
                },
                "_id" : {
                  "type" : "string",
                  "description" : "TODO - Meer/Will input",
                  "example" : "5e335f88bdcd70001e52d0a7"
                },
                "starkVaultId" : {
                  "type" : "number",
                  "description" : "The Stark vault ID.",
                  "example" : 1000003
                },
                "starkKey" : {
                  "type" : "string",
                  "description" : "The Stark public key.",
                  "example" : "6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075"
                },
                "starkMessage" : {
                  "type" : "string",
                  "description" : "Stark Message ID.",
                  "example" : "1d980821dab7adf8f422a4754b031585e663bb1f70d8adb550cde8a628fdbbb"
                },
                "starkSignature" : {
                  "type" : "object",
                  "description" : "Stark signature consisting of consisting of \"r\", \"s\" and the recovery parameter.",
                  "properties" : {
                    "r" : {
                      "type" : "string",
                      "description" : "The \"r\" part of the Stark signature.",
                      "example" : "1f38f551d798562c16d28733c7e3ff6850898d82f0ac9ccd39d373303b1778c"
                    },
                    "s" : {
                      "type" : "string",
                      "description" : "The \"s\" part of the Stark signature.",
                      "example" : "518560420e52a37e9f580f024fc0fe8572cb2f5437a839075bbf4b2b123d572"
                    },
                    "recoveryParam" : {
                      "type" : "number",
                      "description" : "The recovery parameter of the Stark signature.",
                      "example" : 1
                    }
                  }
                },
                "starkTokenId" : {
                  "type" : "string",
                  "description" : "The Stark token ID.",
                  "example" : "0x3"
                },
                "amount" : {
                  "type" : "number",
                  "description" : "The amount that was deposited.",
                  "example" : 1
                },
                "ethAddress" : {
                  "type" : "string",
                  "description" : "Ethereum public address of the user.",
                  "example" : "0x341e46a49f15785373ede443df0220dea6a41bbc"
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "The date and time of the deposit.",
                  "example" : "2020-01-30T22:58:16.720Z"
                }
              }
            },
            "examples" : {
              "application/json" : {
                "isPostedOffchain" : false,
                "isConfirmedOnChain" : false,
                "_id" : "5e335f88bdcd70001e52d0a7",
                "starkVaultId" : 1000003,
                "starkKey" : "6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075",
                "starkMessage" : "1d980821dab7adf8f422a4754b031585e663bb1f70d8adb550cde8a628fdbbb",
                "starkSignature" : {
                  "r" : "1f38f551d798562c16d28733c7e3ff6850898d82f0ac9ccd39d373303b1778c",
                  "s" : "518560420e52a37e9f580f024fc0fe8572cb2f5437a839075bbf4b2b123d572",
                  "recoveryParam" : 1
                },
                "starkTokenId" : "0x3",
                "amount" : 1,
                "ethAddress" : "0x341e46a49f15785373ede443df0220dea6a41bbc",
                "createdAt" : "2020-01-30T22:58:16.720Z"
              }
            }
          }
        }
      }
    },
    "/v1/trading/w/submitOrder" : {
      "post" : {
        "title": "Submit Order",
        "summary" : "This authenticated endpoint is used to submit an order.",
        "operationId" : "postV1TradingWSubmitorder",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "cid" : {
                "type" : "string",
                "description" : "TODO - Will/Meer",
                "example" : "TODO - Will/Meer"
              },
              "gid" : {
                "type" : "string",
                "description" : "TODO - Will/Meer",
                "example" : "TODO - Will/Meer"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of order. Currently only “EXCHANGE_LIMIT” is accepted.",
                "example" : "EXCHANGE LIMIT"
              },
              "symbol" : {
                "type" : "string",
                "description" : "The trading pair.",
                "example" : "ETH:USDT"
              },
              "amount" : {
                "type" : "number",
                "description" : "The token amount to be traded.",
                "example" : 0.1
              },
              "price" : {
                "type" : "number",
                "description" : "The cost per unit.",
                "example" : 1000
              },
              "meta" : {
                "type" : "object",
                "description" : "A set of meta values.",
                "properties" : {
                  "starkOrder" : {
                    "type" : "object",
                    "description" : "Stark order related meta information.",
                    "properties" : {
                      "vaultIdSell" : {
                        "type" : "number",
                        "description" : "The vault ID of the seller.",
                        "example" : 1000002
                      },
                      "vaultIdBuy" : {
                        "type" : "number",
                        "description" : "The vault ID of the buyer.",
                        "example" : 1000001
                      },
                      "amountSell" : {
                        "type" : "string",
                        "description" : "The total amount to be sold.",
                        "example" : "97400000"
                      },
                      "amountBuy" : {
                        "type" : "string",
                        "description" : "The total amount to be bought.",
                        "example" : "100000000000000000"
                      },
                      "tokenSell" : {
                        "type" : "string",
                        "description" : "The Stark token ID for the token being sold.",
                        "example" : "0x2"
                      },
                      "tokenBuy" : {
                        "type" : "string",
                        "description" : "The Stark token ID for the token being bought.",
                        "example" : "0x1"
                      },
                      "nonce" : {
                        "type" : "number",
                        "description" : "Nonce value.",
                        "example" : 0
                      },
                      "expirationTimestamp" : {
                        "type" : "number",
                        "description" : "Expiration timestamp of the order.",
                        "example" : 438947
                      }
                    }
                  },
                  "starkMessage" : {
                    "type" : "string",
                    "description" : "Stark Message ID.",
                    "example" : "597f31e19f2273413833ed1408edd7a2c60e9f82422852a1be7d11049be3268"
                  },
                  "ethAddress" : {
                    "type" : "string",
                    "description" : "The Ethereum public address.",
                    "example" : "'0x341E46a49F15785373edE443Df0220DEa6a41Bbc'"
                  },
                  "starkKey" : {
                    "type" : "string",
                    "description" : "The Stark public key address.",
                    "example" : "77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43"
                  },
                  "starkSignature" : {
                    "type" : "string",
                    "description" : "The Stark signature.",
                    "example" : "77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43"
                  }
                }
              },
              "protocol" : {
                "type" : "string",
                "description" : "The protocol used. Currently only \"stark\" is used.",
                "example" : "stark"
              },
              "partnerId" : {
                "type" : "string",
                "description" : "The ID of the partner.",
                "example" : "TODO - Will/Meer"
              },
              "feeRate" : {
                "type" : "string",
                "description" : "The current fee rate.",
                "example" : "TODO - Will/Meer"
              },
              "dynamicFeeRate" : {
                "type" : "string",
                "description" : "The dynamic fee rate.",
                "example" : "TODO - Will/Meer"
              }
            },
            "required" : [ "type", "symbol", "amount", "price", "meta", "starkOrder", "vaultIdSell", "vaultIdBuy", "amountSell", "amountBuy", "tokenSell", "tokenBuy", "nonce", "expirationTimestamp", "starkMessage", "ethAddress", "starkKey", "starkSignature", "protocol" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the order ID of the submitted order.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "orderId" : {
                  "type" : "string",
                  "description" : "The order ID.",
                  "example" : "1a2b3c"
                }
              }
            },
            "examples" : {
              "application/json" : {
                "orderId" : "1a2b3c"
              }
            }
          }
        }
      }
    },
    "/v1/trading/w/cancelOrder" : {
      "post" : {
        "title": "Cancel Order",
        "summary" : "This endpoint allows to cancel a specific order.",
        "operationId" : "postV1TradingWCancelorder",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "orderId" : {
                "type" : "string",
                "description" : "The order ID.",
                "example" : "d7c8b9"
              },
              "signature" : {
                "type" : "string",
                "description" : "The signed hash (signature) received during the pre-registration process.",
                "example" : "0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
              }
            },
            "required" : [ "orderId", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the order ID of the cancelled order.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "orderId" : {
                  "type" : "string",
                  "description" : "The order ID.",
                  "example" : "d7c8b9"
                }
              }
            },
            "examples" : {
              "application/json" : {
                "orderId" : "d7c8b9"
              }
            }
          }
        }
      }
    },
    "/v1/trading/r/getBalance" : {
      "post" : {
        "title": "Balances",
        "summary" : "This is used to retrieve the total and active balances of a user per token. Active balance is the balance that is currently available. Total balance (specified as balance) is the sum of all the balances including those locked for trading.",
        "operationId" : "postV1TradingRGetbalance",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nonce" : {
                "type" : "number",
                "description" : "This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                "example" : 1.576156902058E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signature obtained by signing the nonce with your private ethereum key.",
                "example" : "0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
              },
              "token" : {
                "type" : "string",
                "description" : "The token which the balance is specifically requested for.",
                "example" : "ETH"
              }
            },
            "required" : [ "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the total and active balances of a user per token.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "balance" : {
                  "type" : "number",
                  "description" : "It is the total balance available for the user corresponding to the specified token.",
                  "example" : 1
                },
                "activeBalance" : {
                  "type" : "number",
                  "description" : "It is the active balance available for the user corresponding to the specified token.",
                  "example" : 0
                },
                "_id" : {
                  "type" : "string",
                  "description" : "User ID.",
                  "example" : "5e318fc4948cc789bb5f7bb4"
                },
                "ethAddress" : {
                  "type" : "string",
                  "description" : "The ethereum public address of the user.",
                  "example" : "user-01"
                },
                "token" : {
                  "type" : "string",
                  "description" : "The token for which the balances are provided.",
                  "example" : "ETH"
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "balance" : 1,
                "activeBalance" : 0,
                "_id" : "5e318fc4948cc789bb5f7bb4",
                "ethAddress" : "user-01",
                "token" : "ETH"
              }, {
                "balance" : 2,
                "activeBalance" : 0,
                "_id" : "5e318fc4948cc789bb5f7bb5",
                "ethAddress" : "user-02",
                "token" : "USD"
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getDeposits" : {
      "post" : {
        "title": "Historic Deposits",
        "summary" : "This is an authenticated endpoint used to retrieve deposits. A token can be specified to get deposits for a specific token.",
        "operationId" : "postV1TradingRGetdeposits",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nonce" : {
                "type" : "number",
                "description" : "This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                "example" : 1.576156902058E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signature obtained by signing the nonce with your private ethereum key.",
                "example" : "0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
              },
              "token" : {
                "type" : "string",
                "description" : "The token which the balance is specifically requested for.",
                "example" : "ETH"
              }
            },
            "required" : [ "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the list of deposits. A token can be specified to get deposits for a specific token.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "ethAddress" : {
                  "type" : "string",
                  "description" : "Ethereum public address of the user.",
                  "example" : "0x341E46a49F15785373edE443Df0220DEa6a41Bbc"
                },
                "starkKey" : {
                  "type" : "string",
                  "description" : "The Stark public key.",
                  "example" : "77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43"
                },
                "starkVaultId" : {
                  "type" : "number",
                  "description" : "The Stark vault ID.",
                  "example" : 123
                },
                "starkTokenId" : {
                  "type" : "string",
                  "description" : "The Stark token ID.",
                  "example" : "0x7"
                },
                "token" : {
                  "type" : "string",
                  "description" : "The token that was deposited.",
                  "example" : "NEC"
                },
                "amount" : {
                  "type" : "number",
                  "description" : "The amount that was deposited.",
                  "example" : 1000
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "The date and time of the deposit.",
                  "example" : "2020-01-29T14:02:08.477Z"
                },
                "isPostedOffchain" : {
                  "type" : "boolean",
                  "description" : "Flag to indicate if the deposit was posted off chain.",
                  "example" : false
                },
                "isConfirmedOnChain" : {
                  "type" : "boolean",
                  "description" : "Flag to indicate if the deposit was confirmed on chain.",
                  "example" : true
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "ethAddress" : "0x341E46a49F15785373edE443Df0220DEa6a41Bbc",
                "starkKey" : "77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43",
                "starkVaultId" : 123,
                "starkTokenId" : "0x7",
                "token" : "NEC",
                "amount" : 1000,
                "createdAt" : "2020-01-29T14:02:08.477Z",
                "isPostedOffchain" : false,
                "isConfirmedOnChain" : true
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getOrder" : {
      "post" : {
        "title": "Order",
        "summary" : "This is endpoint is used to retrieve the details for a specific order using the order ID.",
        "operationId" : "postV1TradingRGetorder",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "orderId" : {
                "type" : "string",
                "description" : "The ID of the order. In case you want to view all open orders, check POST openOrders.",
                "example" : "123"
              },
              "nonce" : {
                "type" : "number",
                "description" : "This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                "example" : 1.580138601893E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signature obtained by signing the nonce with your private ethereum key.",
                "example" : "0xec3606b6b0ee3e28b66803f65aafec4dfe9d4e49be68270fa7275dd8435349c45574c0476edd99641bc13523985ad0b29924f0d4204ce56bc6af00874a0126dc00"
              }
            },
            "required" : [ "orderId", "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns details relating to a particular order.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "_id" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "5b56333fd952c07b351c5940"
                },
                "id" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "1151079509"
                },
                "type" : {
                  "type" : "string",
                  "description" : "Type of the order. Currently, \"EXCHANGE LIMIT\" is the only type that is supported.",
                  "example" : "EXCHANGE LIMIT"
                },
                "pair" : {
                  "type" : "string",
                  "description" : "The trading pair that was used for this order.",
                  "example" : "ETHUSD"
                },
                "status" : {
                  "type" : "string",
                  "description" : "The status of the order.",
                  "example" : "CANCELED"
                },
                "created_at" : {
                  "type" : "string",
                  "description" : "The date and time when the order was created.",
                  "example" : "2018-07-21 16:15:58"
                },
                "updated_at" : {
                  "type" : "string",
                  "description" : "The date and time when the order was last updated.",
                  "example" : "2018-07-23 19:52:51"
                },
                "user_id" : {
                  "type" : "number",
                  "description" : "ID of the user who placed the order.",
                  "example" : 5
                },
                "amount" : {
                  "type" : "string",
                  "description" : "Actual order amount.",
                  "example" : "-0.10000000"
                },
                "price" : {
                  "type" : "string",
                  "description" : "Cost per unit.",
                  "example" : "10000.00000000"
                },
                "originalamount" : {
                  "type" : "string",
                  "description" : "Original amount specified.",
                  "example" : "-0.10000000"
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "_id" : "5b56333fd952c07b351c5940",
                "id" : "1151079509",
                "type" : "EXCHANGE LIMIT",
                "pair" : "ETHUSD",
                "status" : "CANCELED",
                "created_at" : "2018-07-21 16:15:58",
                "updated_at" : "2018-07-23 19:52:51",
                "user_id" : 5,
                "amount" : "-0.10000000",
                "price" : "10000.00000000",
                "originalamount" : "-0.10000000"
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/openOrders" : {
      "post" : {
        "title": "All Orders",
        "summary" : "This endpoints allows to retrieve details on all open orders.",
        "operationId" : "postV1TradingROpenorders",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "symbol" : {
                "type" : "string",
                "description" : "Specifies the trading pair.",
                "example" : "ETH:USD"
              },
              "nonce" : {
                "type" : "number",
                "description" : "This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                "example" : 1.580138601893E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signature obtained by signing the nonce with your private ethereum key.",
                "example" : "0xec3606b6b0ee3e28b66803f65aafec4dfe9d4e49be68270fa7275dd8435349c45574c0476edd99641bc13523985ad0b29924f0d4204ce56bc6af00874a0126dc00"
              }
            },
            "required" : [ "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns all open orders.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "_id" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "5b56333fd952c07b351c5940"
                },
                "id" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "1151079509"
                },
                "type" : {
                  "type" : "string",
                  "description" : "Type of the order. Currently, \"EXCHANGE LIMIT\" is the only type that is supported.",
                  "example" : "EXCHANGE LIMIT"
                },
                "pair" : {
                  "type" : "string",
                  "description" : "The trading pair that was used for this order.",
                  "example" : "ETHUSD"
                },
                "status" : {
                  "type" : "string",
                  "description" : "The status of the order.",
                  "example" : "CANCELED"
                },
                "created_at" : {
                  "type" : "string",
                  "description" : "The date and time when the order was created.",
                  "example" : "2018-07-21 16:15:5"
                },
                "updated_at" : {
                  "type" : "string",
                  "description" : "The date and time when the order was updated.",
                  "example" : "2018-07-23 19:52:51"
                },
                "user_id" : {
                  "type" : "number",
                  "description" : "ID of the user who placed the order.",
                  "example" : 5
                },
                "amount" : {
                  "type" : "string",
                  "description" : "Actual amount.",
                  "example" : "-0.10000000"
                },
                "price" : {
                  "type" : "string",
                  "description" : "Cost per unit.",
                  "example" : "10000.00000000"
                },
                "originalamount" : {
                  "type" : "string",
                  "description" : "Original amount specified.",
                  "example" : "-0.10000000"
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "_id" : "5b56333fd952c07b351c5940",
                "id" : "1151079509",
                "type" : "EXCHANGE LIMIT",
                "pair" : "ETHUSD",
                "status" : "CANCELED",
                "created_at" : "2018-07-21 16:15:58",
                "updated_at" : "2018-07-23 19:52:51",
                "user_id" : 5,
                "amount" : "-0.10000000",
                "price" : "10000.00000000",
                "originalamount" : "-0.10000000"
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/orderHistory" : {
      "post" : {
        "title": "Order History",
        "summary" : "This method is used to retrieve a list of all past orders for a user. This includes executed trades, as well as expired and cancelled orders.",
        "operationId" : "postV1TradingROrderhistory",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "symbol" : {
                "type" : "string",
                "description" : "Specifies the trading pair.",
                "example" : "ETH:USD"
              },
              "nonce" : {
                "type" : "number",
                "description" : "This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                "example" : 1.580138291781E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signature obtained by signing the nonce with your private ethereum key.",
                "example" : "0x20b57db1333c62b71bd1fd3a9eee7fc7ee411641f549149803ac33741d0b29e43783de1518c030a36553a65f15065ef3de11f23dffa33ced9988357daf7c62bf01"
              }
            },
            "required" : [ "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns a list of all a user's past orders.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "_id" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "5b56333fd952c07b351c5940"
                },
                "id" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "1151079509"
                },
                "type" : {
                  "type" : "string",
                  "description" : "Type of the order. Currently, \"EXCHANGE LIMIT\" is the only type that is supported.",
                  "example" : "EXCHANGE LIMIT"
                },
                "pair" : {
                  "type" : "string",
                  "description" : "The trading pair that was used for this order.",
                  "example" : "ETHUSD"
                },
                "status" : {
                  "type" : "string",
                  "description" : "The status of the order.",
                  "example" : "CANCELED"
                },
                "created_at" : {
                  "type" : "string",
                  "description" : "The date and time when the order was created.",
                  "example" : "2018-07-21 16:15:5"
                },
                "updated_at" : {
                  "type" : "string",
                  "description" : "The date and time when the order was updated.",
                  "example" : "2018-07-23 19:52:51"
                },
                "user_id" : {
                  "type" : "number",
                  "description" : "ID of the user who placed the order.",
                  "example" : 5
                },
                "amount" : {
                  "type" : "string",
                  "description" : "Actual amount.",
                  "example" : "-0.10000000"
                },
                "price" : {
                  "type" : "string",
                  "description" : "Cost per unit.",
                  "example" : "10000.00000000"
                },
                "originalamount" : {
                  "type" : "string",
                  "description" : "Original amount specified.",
                  "example" : "-0.10000000"
                },
                "routing" : {
                  "type" : "string",
                  "description" : "The exchange through which the order was routed, e.g., Bitfinex (BFX).",
                  "example" : "BFX"
                },
                "lockedperiod" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "trailingprice" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "0.00000000"
                },
                "hidden" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "vir" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "maxrate" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "0.00000000000000000000"
                },
                "place_id" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "placed_trades" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "nopayback" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "avg_price" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "0.00000000000000000000"
                },
                "active" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "fiat_currency" : {
                  "type" : "string",
                  "description" : "Chosen fiat currency.",
                  "example" : "USD"
                },
                "cid" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "58558087372"
                },
                "cid_date" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "2018-07-21"
                },
                "mseq" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "2"
                },
                "gid" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "flags" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "price_aux_limit" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "0.00000000"
                },
                "type_prev" : {
                  "type" : "number",
                  "description" : "TODO - Will/Meer",
                  "example" : 0
                },
                "tif" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "3570"
                },
                "vPair" : {
                  "type" : "string",
                  "description" : "TODO - Will/Meer",
                  "example" : "ETHUSD"
                },
                "meta" : {
                  "type" : "object",
                  "description" : "Contains metadata $F15 and auth.",
                  "properties" : {
                    "$F15" : {
                      "type" : "number",
                      "description" : "TODO - Will/Meer",
                      "example" : 1
                    },
                    "auth" : {
                      "type" : "string",
                      "description" : "TODO - Will/Meer",
                      "example" : "0x97ebb3391b30f495ce8cb97857db9b72d3e9dbcb"
                    }
                  }
                },
                "symbol" : {
                  "type" : "string",
                  "description" : "Selected trading pair.",
                  "example" : "tETHUSD"
                },
                "t" : {
                  "type" : "number",
                  "description" : "Unix timestamp.",
                  "example" : 1532375571000
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "_id" : "5b56333fd952c07b351c5940",
                "id" : "1151079509",
                "type" : "EXCHANGE LIMIT",
                "pair" : "ETHUSD",
                "status" : "CANCELED",
                "created_at" : "2018-07-21 16:15:58",
                "updated_at" : "2018-07-23 19:52:51",
                "user_id" : 5,
                "amount" : "-0.10000000",
                "price" : "10000.00000000",
                "originalamount" : "-0.10000000",
                "routing" : "BFX",
                "lockedperiod" : 0,
                "trailingprice" : "0.00000000",
                "hidden" : 0,
                "vir" : 0,
                "maxrate" : "0.00000000000000000000",
                "placed_id" : null,
                "placed_trades" : null,
                "nopayback" : null,
                "avg_price" : "0.00000000000000000000",
                "active" : 0,
                "fiat_currency" : "USD",
                "cid" : "58558087372",
                "cid_date" : "2018-07-21",
                "mseq" : "2",
                "gid" : null,
                "flags" : null,
                "price_aux_limit" : "0.00000000",
                "type_prev" : null,
                "tif" : "3570",
                "v_pair" : "ETHUSD",
                "meta" : {
                  "$F15" : 1,
                  "auth" : "0x97ebb3391b30f495ce8cb97857db9b72d3e9dbcb"
                },
                "symbol" : "tETHUSD",
                "t" : 1532375571000
              }, {
                "_id" : "5b56333fd952c07b351c593f",
                "id" : "1151079508",
                "type" : "EXCHANGE LIMIT",
                "pair" : "ETHUSD",
                "status" : "CANCELED",
                "created_at" : "2018-07-21 16:15:53",
                "updated_at" : "2018-07-23 19:52:51",
                "user_id" : 5,
                "amount" : "-0.10000000",
                "price" : "10000.00000000",
                "originalamount" : "-0.10000000",
                "routing" : "BFX",
                "lockedperiod" : 0,
                "trailingprice" : "0.00000000",
                "hidden" : 0,
                "vir" : 0,
                "maxrate" : "0.00000000000000000000",
                "placed_id" : null,
                "placed_trades" : null,
                "nopayback" : null,
                "avg_price" : "0.00000000000000000000",
                "active" : 0,
                "fiat_currency" : "USD",
                "cid" : "58552546110",
                "cid_date" : "2018-07-21",
                "mseq" : "2",
                "gid" : null,
                "flags" : null,
                "price_aux_limit" : "0.00000000",
                "type_prev" : null,
                "tif" : "3570",
                "v_pair" : "ETHUSD",
                "meta" : {
                  "$F15" : 1,
                  "auth" : "0x97ebb3391b30f495ce8cb97857db9b72d3e9dbcb"
                },
                "symbol" : "tETHUSD",
                "t" : 1532375571000
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getWithdrawal" : {
      "post" : {
        "title": "Withdrawal",
        "summary" : "This endpoint is used to retrieve details relating to a particular withdrawal.",
        "operationId" : "postV1TradingRGetwithdrawal",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "withdrawalId" : {
                "type" : "string",
                "description" : "Used to identify a specific withdrawal.",
                "example" : "1a2b3c"
              },
              "nonce" : {
                "type" : "number",
                "description" : "This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                "example" : 1.57615690205E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signature obtained by signing the nonce with your private ethereum key.",
                "example" : "0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
              }
            },
            "required" : [ "withdrawalId", "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns details relating to a particular withdrawal.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "_id" : {
                  "type" : "string",
                  "description" : "TODO - waiting for Meer",
                  "example" : "53cb6b9b4f4ddef1ad47f943"
                },
                "ethAddress" : {
                  "type" : "string",
                  "description" : "Ethereum public address of the user.",
                  "example" : "0x14d06788090769f669427b6aea1c0240d2321f34"
                },
                "starkKey" : {
                  "type" : "string",
                  "description" : "The Stark public key of the user.",
                  "example" : "77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43"
                },
                "token" : {
                  "type" : "string",
                  "description" : "The token that was withdrawn.",
                  "example" : "NEC"
                },
                "amount" : {
                  "type" : "number",
                  "description" : "The amount that was withdrawn.",
                  "example" : 1000
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "The date and time of the withdrawal.",
                  "example" : "2020-01-29T14:13:05.898Z"
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "_id" : "53cb6b9b4f4ddef1ad47f943",
                "ethAddress" : "0x14d06788090769f669427b6aea1c0240d2321f34",
                "starkKey" : "77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43",
                "token" : "NEC",
                "amount" : 1000,
                "createdAt" : "2020-01-29T14:13:05.898Z"
              } ]
            }
          }
        }
      }
    },
    "/v1/trading/r/getWithdrawals" : {
      "post" : {
        "title": "Historic Withdrawals",
        "summary" : "This endpoint is used to retrieve all past withdrawals. If a token is specified, withdrawals pertaining to only that particular token are provided.",
        "operationId" : "postV1TradingRGetwithdrawals",
        "parameters" : [ {
          "in" : "body",
          "name" : "Payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "token" : {
                "type" : "string",
                "description" : "This is used to specify a particular token.",
                "example" : "ETH"
              },
              "nonce" : {
                "type" : "number",
                "description" : "This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
                "example" : 1.57615690205E9
              },
              "signature" : {
                "type" : "string",
                "description" : "The signature obtained by signing the nonce with your private ethereum key.",
                "example" : "0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
              }
            },
            "required" : [ "nonce", "signature" ]
          }
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns all the withdrawals.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "ethAddress" : {
                  "type" : "string",
                  "description" : "Ethereum public address of the user.",
                  "example" : "0x341E46a19F25787373eaE444Df0110DEa6a4127a"
                },
                "token" : {
                  "type" : "string",
                  "description" : "The token that was withdrawn.",
                  "example" : "ETH"
                },
                "amount" : {
                  "type" : "number",
                  "description" : "The amount that was withdrawn.",
                  "example" : 100
                },
                "starkKey" : {
                  "type" : "string",
                  "description" : "The Stark public key of the user.",
                  "example" : "1096391677682140209565436534397888993113230781145932035642834566847897455970"
                }
              }
            },
            "examples" : {
              "application/json" : [ {
                "ethAddress" : "0x341E46a19F25787373eaE444Df0110DEa6a4127a",
                "token" : "ETH",
                "amount" : 100,
                "starkKey" : "1096391677682140209565436534397888993113230781145932035642834566847897455970"
              } ]
            }
          }
        }
      }
    },
    "/bfx/v2/book/{Symbol}/{Precision}" : {
      "get" : {
        "title": "Orderbook",
        "summary" : "This public endpoint allows to keep track of the state of DeversiFi orderbooks on a price aggregated basis with customizable precision. Raw books can be retrieved by using precision R0.",
        "operationId" : "getBfxV2Book",
        "parameters" : [ {
          "in" : "path",
          "name" : "Symbol",
          "type" : "string",
          "required" : true,
          "description" : "Specifies the trading pair.",
          "x-example" : "tETHUSD"
        }, {
          "in" : "path",
          "name" : "Precision",
          "type" : "string",
          "required" : true,
          "description" : "Set the price aggregation level. Adjust the precision by entering a value between P0-P4. Raw books can be retrieved by using precision R0. Use one of the following values - P0, P1, P2, P3, P4, R0.",
          "x-example" : "P0"
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns a specific order and allows you to keep track of the state of Deversifi order books on a price aggregated basis with customizable precision.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "Price" : {
                  "type" : "number",
                  "description" : "Specifies the price level for trading."
                },
                "Count" : {
                  "type" : "number",
                  "description" : "Number of orders at that price level."
                },
                "Amount" : {
                  "type" : "number",
                  "description" : "Total amount available at that price level."
                }
              }
            },
            "examples" : {
              "application/json" : [ [ 302, 1, 20 ], [ 168.02, 1, 0.6 ], [ 167.98, 1, 0.6 ], [ 167.94, 1, 0.6 ] ]
            }
          }
        }
      }
    },
    "/bfx/v2/tickers" : {
      "get" : {
        "title": "Tickers",
        "summary" : "The ticker endpoint provides a high level overview of the state of the market for a specified pair. It shows the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
        "operationId" : "getBfxV2Tickers",
        "parameters" : [ {
          "in" : "query",
          "name" : "symbols",
          "type" : "string",
          "required" : true,
          "description" : "Specify the trading pair. A list of symbols can also be provided. In order to retrieve the results of all trading pairs, the symbol “ALL” should be used. symbols = [\"tMKRETH\", \"fUSD\", \"tETHUSD\"]",
          "x-example" : "tMKRETH"
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "symbol" : {
                    "type" : "string",
                    "description" : "The symbol of the requested trading pair."
                  },
                  "bid" : {
                    "type" : "number",
                    "description" : "Price of the most recent highest bid."
                  },
                  "bid_size" : {
                    "type" : "number",
                    "description" : "Sum of the 25 highest bid sizes."
                  },
                  "ask" : {
                    "type" : "number",
                    "description" : "Price of the most recent lowest ask price."
                  },
                  "ask_size" : {
                    "type" : "number",
                    "description" : "Sum of the 25 lowest ask sizes."
                  },
                  "daily_change" : {
                    "type" : "number",
                    "description" : "Amount that the last price has changed since yesterday."
                  },
                  "daily_change_relative" : {
                    "type" : "number",
                    "description" : "Relative price change since yesterday (x 100 for percentage change)."
                  },
                  "last_price" : {
                    "type" : "number",
                    "description" : "Price of the last trade."
                  },
                  "volume" : {
                    "type" : "number",
                    "description" : "Daily volume."
                  },
                  "high" : {
                    "type" : "number",
                    "description" : "Daily high."
                  },
                  "low" : {
                    "type" : "number",
                    "description" : "Daily low."
                  }
                }
              }
            },
            "examples" : {
              "application/json" : [ [ "tBTCUSD", 8719.7, 34.58126956, 8722.2, 32.51991831, 263.3, 0.0311, 8722.3, 3798.87390501, 8750, 8449.3 ], [ "tLTCUSD", 57.875, 1297.95111409, 57.931, 1670.4711322000003, 3.233, 0.0592, 57.854, 33130.37488952, 58.18, 54.053 ] ]
            }
          }
        }
      }
    },
    "/bfx/v2/candles/trade:{timeframe}:{symbol}/{section}" : {
      "get" : {
        "title": "Candles",
        "summary" : "The Candles endpoint provides OCHL (Open, Close, High, Low) and volume data for the specified funding currency or trading pair. The endpoint returns the last 100 candles by default, but a limit and a start and/or end timestamp can be specified.",
        "operationId" : "getBfxV2Candles",
        "parameters" : [ {
          "in" : "path",
          "name" : "timeframe",
          "type" : "string",
          "required" : true,
          "description" : "Specify time frame. Available values are '1m', '5m', '15m', '30m', '1h', '3h', '6h','12h', '1D','7D', '14D', '1M'.",
          "x-example" : "1m"
        }, {
          "in" : "path",
          "name" : "symbol",
          "type" : "string",
          "required" : true,
          "description" : "Specify the trading pair for which information is required.",
          "x-example" : "tETHUSD"
        }, {
          "in" : "path",
          "name" : "section",
          "type" : "string",
          "required" : true,
          "description" : "Section for more precise selection. Available values - \"last\" or \"hist\"",
          "x-example" : "hist"
        }, {
          "in" : "query",
          "name" : "limit",
          "type" : "number",
          "required" : false,
          "description" : "Limits the number of results.",
          "x-example" : 10
        }, {
          "in" : "query",
          "name" : "start",
          "type" : "string",
          "required" : false,
          "description" : "Filter start (time since epoch in ms).",
          "x-example" : "1517923200000"
        }, {
          "in" : "query",
          "name" : "end",
          "type" : "string",
          "required" : false,
          "description" : "Filter end (time since epoch in ms).",
          "x-example" : "1577923200000"
        }, {
          "in" : "query",
          "name" : "sort",
          "type" : "number",
          "required" : false,
          "description" : "Determines if the results should be sorted. If = 1, it sorts results returned with old > new.",
          "x-example" : 1
        } ],
        "tags" : [ "Trading" ],
        "responses" : {
          "default" : {
            "description" : "Returns the last 100 candles by default, but a limit and a start and/or end timestamp can be specified.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "mts" : {
                    "type" : "number",
                    "description" : "Millisecond timestamp.",
                    "example" : 1573562880000
                  },
                  "open" : {
                    "type" : "number",
                    "description" : "First execution during the time frame.",
                    "example" : 3.0178E-4
                  },
                  "close" : {
                    "type" : "number",
                    "description" : "Last execution during the time frame.",
                    "example" : 3.3105E-4
                  },
                  "high" : {
                    "type" : "number",
                    "description" : "Highest execution during the time frame.",
                    "example" : 3.3105E-4
                  },
                  "low" : {
                    "type" : "number",
                    "description" : "Lowest execution during the time frame.",
                    "example" : 3.0178E-4
                  },
                  "volume" : {
                    "type" : "number",
                    "description" : "Quantity of symbol traded within the time frame.",
                    "example" : 1840.0074507599998
                  }
                }
              }
            },
            "examples" : {
              "application/json" : [ [ 1573562880000, 3.0E-4, 3.0E-4, 3.0E-4, 3.0E-4, 24083.8638948 ], [ 1573562820000, 3.0178E-4, 3.3105E-4, 3.3105E-4, 3.0178E-4, 1840.0074507599998 ] ]
            }
          }
        }
      }
    }
  }
}
