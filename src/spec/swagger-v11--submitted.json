{
  "swagger":"2.0",
  "host":"api.deversifi.dev",
  "basePath":"/",
  "schemes":[
    "https"
  ],
  "info":{
    "title":"Deversifi API documentation",
    "version":"1.0.0",
    "description":"dvf-pub-api"
  },
  "tags":[],
  "paths":{
    "/v1/trading/r/24HoursVolume":{
      "get":{
        "summary":"Request information regarding the trading volume for a specific date. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per token.",
        "operationId":"getV1TradingR24hoursvolume",
        "parameters":[
          {
            "type":"string",
            "description":"The year of the specific trading volume request date - in this case 2020.",
            "name":"year",
            "in":"query",
            "required":true
          },
          {
            "type":"string",
            "description":"The month of the specific trading volume request date - in this case 01 (January).",
            "name":"month",
            "in":"query",
            "required":true
          },
          {
            "type":"number",
            "description":"The day of the specific trading volume request date - in this case 01 (1st of a month).",
            "name":"day",
            "in":"query",
            "required":true
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/24HoursVolumeResponse"
            },
            "description":"Returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair."
          }
        }
      }
    },
    "/v1/trading/r/30DaysVolume":{
      "get":{
        "summary":"Request information regarding the trading volume of a specific address for the last 30 days. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per token. Results are cached for 60 minutes.",
        "operationId":"getV1TradingR30daysvolume",
        "parameters":[
          {
            "type":"number",
            "name":"nonce",
            "in":"query",
            "required":true
          },
          {
            "type":"string",
            "name":"signature",
            "in":"query",
            "required":true
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/30DaysVolumeResponse"
            },
            "description":"Returns the trading volume of the last 30 days for a specific address. The request returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair. Results are cached for 60 minutes."
          }
        }
      }
    },
    "/v1/trading/r/USDRanking":{
      "get":{
        "summary":"This returns a user ranking by overall trading volume quoted in USD. If the parameters startDate and endDate are provided, the ranking includes only trading volume within that window of time.",
        "operationId":"getV1TradingRUsdranking",
        "parameters":[
          {
            "type":"number",
            "description":"The start date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "name":"startDate",
            "in":"query"
          },
          {
            "type":"number",
            "description":"The end date and time (Unix timestamp in milliseconds) for which events are requested.If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "name":"endDate",
            "in":"query"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/USDRankingResponse"
            },
            "description":"Ranked output of all trading volumes for all the tokens."
          }
        }
      }
    },
    "/v1/trading/r/estimatedNextBatchTime":{
      "get":{
        "summary":"Returns a countdown until the expected next batch proof is submitted onto the blockchain. The next batch will include all pending withdrawals.",
        "operationId":"getV1TradingREstimatednextbatchtime",
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/estimatedNextBatchResponse"
            },
            "description":"Returns the amount of time remaining until the batch is posted to Ethereum."
          }
        }
      }
    },
    "/v1/trading/r/feeRate":{
      "get":{
        "summary":"Return current fee rate for a given address. This rate is dependent on user trading volume.",
        "operationId":"getV1TradingRFeerate",
        "parameters":[
          {
            "type":"number",
            "name":"nonce",
            "in":"query",
            "required":true
          },
          {
            "type":"string",
            "name":"signature",
            "in":"query",
            "required":true
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "type":"string"
            },
            "description":"Successful"
          }
        }
      }
    },
    "/v1/trading/r/last24HoursVolume":{
      "get":{
        "summary":"Request information regarding the trading volume for the last 24 hours. The request returns the overall trading volume details in USD as well as the trading volume per token in USD and the native token.",
        "operationId":"getV1TradingRLast24hoursvolume",
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/last24HoursVolumeResponse"
            },
            "description":"Returns the trading volume of the last 24 hours."
          }
        }
      }
    },
    "/v1/trading/r/tokenRanking":{
      "get":{
        "summary":"This returns a user ranking by trading volume for a chosen token. If the parameters startDate and endDate are provided, the ranking includes only trading volume within that window of time. All volumes are quoted in ETH.",
        "operationId":"getV1TradingRTokenranking",
        "parameters":[
          {
            "type":"string",
            "description":"The currency relating to the requested trading volume information.",
            "name":"currency",
            "in":"query",
            "required":true
          },
          {
            "type":"number",
            "description":"The start date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "name":"startDate",
            "in":"query"
          },
          {
            "type":"number",
            "description":"The end date and time (Unix timestamp in milliseconds) for which the trade volumes are requested. If startDate and endDate are not provided, it returns the volume ranking if all time.",
            "name":"endDate",
            "in":"query"
          }
        ],
        "tags":[
          "Market"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/tokenRankingResponse"
            },
            "description":"Returns a ranked output of all the trading volumes for a given crypto currency. All the Volumes are quoted in ETH."
          }
        }
      }
    },
    "/v1/trading/r/getBalance":{
      "post":{
        "summary":"This is used to retrieve the total and active balances of a user per token. Active balance is the balance that is currently available. Total balance (specified as balance) is the sum of all the balances including those locked for trading.",
        "operationId":"postV1TradingRGetbalance",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getBalancePayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/getBalanceResponse"
            },
            "description":"Returns the total and active balances of a user per token."
          }
        }
      }
    },
    "/v1/trading/r/getConf":{
      "post":{
        "summary":"Returns the DeversiFi application configuration details.",
        "operationId":"postV1TradingRGetconf",
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/getConfResponse"
            },
            "description":"Returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair."
          }
        }
      }
    },
    "/v1/trading/r/getDeposits":{
      "post":{
        "summary":"This is an authenticated endpoint used to retrieve deposits. A token can be specified to get deposits for a specific token.",
        "operationId":"postV1TradingRGetdeposits",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getBalancePayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/getDepositsResponse"
            },
            "description":"Returns the list of deposits. A token can be specified to get deposits for a specific token."
          }
        }
      }
    },
    "/v1/trading/r/getOrder":{
      "post":{
        "summary":"This is endpoint is used to retrieve the details for a specific order using the order ID.",
        "operationId":"postV1TradingRGetorder",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getOrderPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/getOrderResponse"
            },
            "description":"Returns details relating to a particular order."
          }
        }
      }
    },
    "/v1/trading/r/getPendingWithdrawals":{
      "post":{
        "summary":"This endpoint is used to retrieve all pending withdrawals. If a token is specified, withdrawals pertaining to only that particular token are provided.",
        "operationId":"postV1TradingRGetpendingwithdrawals",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getPendingWithdrawalsPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "type":"string"
            },
            "description":"Successful"
          }
        }
      }
    },
    "/v1/trading/r/getUserConf":{
      "post":{
        "summary":"Returns the DeversiFi application and user configuration details.",
        "operationId":"postV1TradingRGetuserconf",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getUserConfPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/getUserConfResponse"
            },
            "description":"Returns the overall trading volume details for all tokens in USD as well as the trading volume per trading pair."
          }
        }
      }
    },
    "/v1/trading/r/getVaultId":{
      "post":{
        "summary":"An authenticated endpoint used to retrieve a vaultId for given token.",
        "operationId":"postV1TradingRGetvaultid",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getPendingWithdrawalsPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "type":"string"
            },
            "description":"Successful"
          }
        }
      }
    },
    "/v1/trading/r/getWithdrawal":{
      "post":{
        "summary":"This endpoint is used to retrieve details relating to a particular withdrawal.",
        "operationId":"postV1TradingRGetwithdrawal",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getWithdrawalPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/getWithdrawalResponse"
            },
            "description":"Returns details relating to a particular withdrawal."
          }
        }
      }
    },
    "/v1/trading/r/openOrders":{
      "post":{
        "summary":"This endpoints allows to retrieve details on all open orders.",
        "operationId":"postV1TradingROpenorders",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/openOrdersPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/openOrdersResponse"
            },
            "description":"Returns all open orders."
          }
        }
      }
    },
    "/v1/trading/r/orderHistory":{
      "post":{
        "summary":"This method is used to retrieve a list of all past orders for a user. This includes executed trades, as well as expired and cancelled orders.",
        "operationId":"postV1TradingROrderhistory",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/orderHistoryPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/orderHistoryResponse"
            },
            "description":"Returns a list of all a user's past orders."
          }
        }
      }
    },
    "/v1/trading/r/withdrawHistory":{
      "post":{
        "summary":"An authenticated endpoint used to retrieve a list of user's past withdrawals. This includes ready, completed, as well as cancelled withdrawals.",
        "operationId":"postV1TradingRWithdrawhistory",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/getPendingWithdrawalsPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "type":"string"
            },
            "description":"Successful"
          }
        }
      }
    },
    "/v1/trading/w/cancelOrder":{
      "post":{
        "summary":"This endpoint allows to cancel a specific order.",
        "operationId":"postV1TradingWCancelorder",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/cancelOrderPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/cancelOrderResponse"
            },
            "description":"Returns the order ID of the cancelled order."
          }
        }
      }
    },
    "/v1/trading/w/deposit":{
      "post":{
        "summary":"Submit a signed notification of a new deposit made.",
        "operationId":"postV1TradingWDeposit",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/depositPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/depositResponse"
            },
            "description":"Returns the deposit notifcation."
          }
        }
      }
    },
    "/v1/trading/w/preRegister":{
      "post":{
        "summary":"This method is used to bind a Stark public key to a corresponding Ethereum public address. A signed hash is received as an acknowledgement of the binding. The signed hash is required for the registration process.",
        "operationId":"postV1TradingWPreregister",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/preRegisterPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/preRegisterResponse"
            },
            "description":"Returns a signed hash that confirms the binding."
          }
        }
      }
    },
    "/v1/trading/w/register":{
      "post":{
        "summary":"This method is used to register a Stark key that corresponds to an Ethereum public address, and retrieve DeversiFi application as well as user configuration details. It is important to perform “Pre-registration” before this step.",
        "operationId":"postV1TradingWRegister",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/registerPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/getUserConfResponse"
            },
            "description":"Returns the DeversiFi application as well as the user configuration details."
          }
        }
      }
    },
    "/v1/trading/w/submitOrder":{
      "post":{
        "summary":"This authenticated endpoint is used to submit an order.",
        "operationId":"postV1TradingWSubmitorder",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/Model1"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "$ref":"#/definitions/submitOrderResponse"
            },
            "description":"Returns the order ID of the submitted order."
          }
        }
      }
    },
    "/v1/trading/w/withdraw":{
      "post":{
        "summary":"Submit a request for a new withdrawal.",
        "operationId":"postV1TradingWWithdraw",
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "schema":{
              "$ref":"#/definitions/withdrawalPayload"
            }
          }
        ],
        "tags":[
          "Trading"
        ],
        "responses":{
          "default":{
            "schema":{
              "type":"string"
            },
            "description":"Successful"
          }
        }
      }
    }
  },
  "definitions":{
    "tokens":{
      "type":"object"
    },
    "24HoursVolumeResponse":{
      "type":"object",
      "properties":{
        "TotalUSDValue":{
          "type":"number",
          "description":"The total trade volume in terms of USD.",
          "example":3320.75
        },
        "tokens":{
          "$ref":"#/definitions/tokens"
        },
        "startDate":{
          "type":"string",
          "description":"The start date and time for the volume presented.",
          "example":"2020-01-01T00:00:00.714Z"
        },
        "endDate":{
          "type":"string",
          "description":"The end date and time for the volume presented.",
          "example":"2020-01-01T00:00:00.714Z"
        }
      }
    },
    "30DaysVolumeResponse":{
      "type":"object",
      "properties":{
        "TotalUSDValue":{
          "type":"number",
          "description":"The total trade volume in terms of USD.",
          "example":73364.1749445
        },
        "tokens":{
          "$ref":"#/definitions/tokens"
        },
        "startDate":{
          "type":"string",
          "description":"The start date and time for the volume presented.",
          "example":"2020-01-01T00:00:00.714Z"
        },
        "endDate":{
          "type":"string",
          "description":"The end date and time for the volume presented.",
          "example":"2020-01-01T00:00:00.714Z"
        }
      }
    },
    "USDRankingResponse":{
      "type":"object",
      "properties":{
        "address":{
          "type":"string",
          "description":"The address of the trader.",
          "example":"0xfc898b18a70ce49579f8d79a32e29928c15b4bc8"
        },
        "USDValue":{
          "type":"number",
          "description":"The trading volume for the address quoted in USD.",
          "example":119128.566703
        }
      }
    },
    "estimatedNextBatchResponse":{
      "type":"object",
      "properties":{
        "estimatedTime":{
          "type":"number",
          "description":"The number of seconds until the batch is estimated to be ready.",
          "example":608
        }
      }
    },
    "last24HoursVolumeResponse":{
      "type":"object",
      "properties":{
        "TotalUSDValue":{
          "type":"number",
          "description":"The total trade volume in terms of USD.",
          "example":3320.75
        },
        "tokens":{
          "$ref":"#/definitions/tokens"
        },
        "startDate":{
          "type":"string",
          "description":"The start date and time for the volume presented.",
          "example":"2020-01-01T00:00:00.714Z"
        }
      }
    },
    "tokenRankingResponse":{
      "type":"object",
      "properties":{
        "address":{
          "type":"string",
          "description":"The address of the trader.",
          "example":"0xfc898b18a70ce49579f8d79a32e29928c15b4bc8"
        },
        "amount":{
          "type":"number",
          "description":"The trading volume for the address",
          "example":852.9290936325145
        }
      }
    },
    "getBalancePayload":{
      "type":"object",
      "properties":{
        "nonce":{
          "type":"number",
          "description":"This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
          "example":1576156902.058
        },
        "signature":{
          "type":"string",
          "description":"The signature obtained by signing the nonce with your private ethereum key.",
          "example":"0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
        },
        "token":{
          "type":"string",
          "description":"The token which the balance is specifically requested for.",
          "example":"ETH"
        }
      },
      "required":[
        "nonce",
        "signature"
      ]
    },
    "getBalanceResponse":{
      "type":"object",
      "properties":{
        "balance":{
          "type":"number",
          "description":"It is the total balance available for the user corresponding to the specified token.",
          "example":1
        },
        "activeBalance":{
          "type":"number",
          "description":"It is the active balance available for the user corresponding to the specified token.",
          "example":0
        },
        "_id":{
          "type":"string",
          "description":"User ID.",
          "example":"5e318fc4948cc789bb5f7bb4"
        },
        "ethAddress":{
          "type":"string",
          "description":"The ethereum public address of the user.",
          "example":"user-01"
        },
        "token":{
          "type":"string",
          "description":"The token for which the balances are provided.",
          "example":"ETH"
        }
      }
    },
    "DVF":{
      "type":"object",
      "description":"This contains application configuration details to set up for deposits and trading.",
      "example":{
        "defaultFeeRate":0.002,
        "deversifiAddress":"0x9ab450355b4ab504cbc0e4de484781dac08e6a26",
        "starkExContractAddress":"0xF3731d0cdC9834f6F32104580bD226EF1bc1A9F9",
        "exchangeSymbols":"[\"tETHUSD\",\"tZRXUSD\",\"tZRXETH\"]",
        "tempStarkVaultId":1
      },
      "properties":{
        "defaultFeeRate":{
          "type":"number",
          "description":"The default fee rate, if no volume or maker discount."
        },
        "deversifiAddress":{
          "type":"string",
          "description":"The address of the DeversiFi exchange."
        },
        "starkExContractAddress":{
          "type":"string",
          "description":"Stark deposit contract address."
        },
        "exchangeSymbols":{
          "type":"string",
          "description":"Currency pairs available at the DeversiFi exchange for trading"
        },
        "tempStarkVaultId":{
          "type":"number",
          "description":"Transit Stark vault ID used for deposit privacy"
        }
      }
    },
    "getConfResponse":{
      "type":"object",
      "properties":{
        "DVF":{
          "$ref":"#/definitions/DVF"
        },
        "tokenRegistry":{
          "$ref":"#/definitions/tokens"
        }
      }
    },
    "getDepositsResponse":{
      "type":"object",
      "properties":{
        "ethAddress":{
          "type":"string",
          "description":"The ethereum public address of the user.",
          "example":"0x341E46a49F15785373edE443Df0220DEa6a41Bbc"
        },
        "starkKey":{
          "type":"string",
          "description":"The Stark public key.",
          "example":"77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43"
        },
        "starkVaultId":{
          "type":"number",
          "description":"The Stark vault ID.",
          "example":123
        },
        "starkTokenId":{
          "type":"string",
          "description":"The Stark token ID.",
          "example":"0x7"
        },
        "token":{
          "type":"string",
          "description":"The token that was deposited",
          "example":"NEC"
        },
        "amount":{
          "type":"number",
          "description":"The amount that was deposited.",
          "example":1000
        },
        "createdAt":{
          "type":"string",
          "description":"The date and time of the deposit.",
          "example":"2020-01-29T14:02:08.477Z"
        },
        "isPostedOffchain":{
          "type":"boolean",
          "description":"Flag to indicate if the deposit was posted off chain.",
          "example":false
        },
        "isConfirmedOnChain":{
          "type":"boolean",
          "description":"Flag to indicate if the deposit was confirmed off chain.",
          "example":true
        }
      }
    },
    "getOrderPayload":{
      "type":"object",
      "properties":{
        "orderId":{
          "type":"string",
          "description":"The ID of the order. In case you want to view all open orders, check POST openOrders.",
          "example":"123"
        },
        "nonce":{
          "type":"number",
          "description":"This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
          "example":1580138601.893
        },
        "signature":{
          "type":"string",
          "description":"The signature obtained by signing the nonce with your private ethereum key.",
          "example":"0xec3606b6b0ee3e28b66803f65aafec4dfe9d4e49be68270fa7275dd8435349c45574c0476edd99641bc13523985ad0b29924f0d4204ce56bc6af00874a0126dc00"
        }
      },
      "required":[
        "orderId",
        "nonce",
        "signature"
      ]
    },
    "getOrderResponse":{
      "type":"object",
      "properties":{
        "_id":{
          "type":"string",
          "example":"5b56333fd952c07b351c5940"
        },
        "id":{
          "type":"string",
          "example":"1151079509"
        },
        "type":{
          "type":"string",
          "description":"Type of the order. Currently, \"EXCHANGE LIMIT\" is the only type that is supported.",
          "example":"EXCHANGE LIMIT"
        },
        "pair":{
          "type":"string",
          "description":"The trading pair that was used for this order.",
          "example":"ETHUSD"
        },
        "status":{
          "type":"string",
          "description":"The status of the order.",
          "example":"CANCELED"
        },
        "created_at":{
          "type":"string",
          "description":"The date and time when the order was created.",
          "example":"2018-07-21 16:15:58"
        },
        "updated_at":{
          "type":"string",
          "description":"The date and time when the order was last updated.",
          "example":"2018-07-23 19:52:51"
        },
        "user_id":{
          "type":"number",
          "description":"ID of the user who placed the order.",
          "example":5
        },
        "amount":{
          "type":"string",
          "description":"Actual order amount.",
          "example":"-0.10000000"
        },
        "price":{
          "type":"string",
          "description":"Cost per unit.",
          "example":"10000.00000000"
        },
        "originalamount":{
          "type":"string",
          "description":"Original amount specified.",
          "example":"-0.10000000"
        }
      }
    },
    "getPendingWithdrawalsPayload":{
      "type":"object",
      "properties":{
        "nonce":{
          "type":"number"
        },
        "signature":{
          "type":"string"
        },
        "token":{
          "type":"string"
        }
      },
      "required":[
        "nonce",
        "signature"
      ]
    },
    "getUserConfPayload":{
      "type":"object",
      "properties":{
        "nonce":{
          "type":"number",
          "description":"A user generated nonce.",
          "example":1579901055575
        },
        "signature":{
          "type":"string",
          "description":"The signed hash (signature) received during the pre-registration process.",
          "example":"0x494a2c166f95518dcf5a9484fcb702a454382f281f96ba41639fe3a2af279fdc1e3b4e5aa2f585a9a40fb5aaabf10b5390ed5592d502c7799a261f81219491f001"
        }
      },
      "required":[
        "nonce",
        "signature"
      ]
    },
    "getUserConfResponse":{
      "type":"object",
      "properties":{
        "DVF":{
          "$ref":"#/definitions/DVF"
        },
        "tokenRegistry":{
          "$ref":"#/definitions/tokens"
        },
        "isRegistered":{
          "type":"string",
          "description":"Registration status.",
          "example":"true"
        },
        "ethAddress":{
          "type":"string",
          "description":"Ethereum address.",
          "example":"0x278ff3bb25c5b1bb7032e822661974479280fa74"
        }
      }
    },
    "getWithdrawalPayload":{
      "type":"object",
      "properties":{
        "withdrawalId":{
          "type":"string",
          "description":"Used to identify a specific withdrawal.",
          "example":"1a2b3c"
        },
        "nonce":{
          "type":"number",
          "description":"This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
          "example":1576156902.05
        },
        "signature":{
          "type":"string",
          "description":"The signature obtained by signing the nonce with your private ethereum key.",
          "example":"0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
        }
      },
      "required":[
        "withdrawalId",
        "nonce",
        "signature"
      ]
    },
    "getWithdrawalResponse":{
      "type":"object",
      "properties":{
        "_id":{
          "type":"string",
          "example":"53cb6b9b4f4ddef1ad47f943"
        },
        "ethAddress":{
          "type":"string",
          "description":"Ethereum public address of the user.",
          "example":"0x14d06788090769f669427b6aea1c0240d2321f34"
        },
        "starkKey":{
          "type":"string",
          "description":"The Stark public key of the user.",
          "example":"77a3b314db07c45076d11f62b6f9e748a39790441823307743cf00d6597ea43"
        },
        "token":{
          "type":"string",
          "description":"The token that was withdrawn.",
          "example":"NEC"
        },
        "amount":{
          "type":"number",
          "description":"The amount that was withdrawn.",
          "example":100
        },
        "createdAt":{
          "type":"string",
          "description":"The date and time of the withdrawal.",
          "example":"2020-01-29T14:13:05.898Z"
        }
      }
    },
    "openOrdersPayload":{
      "type":"object",
      "properties":{
        "nonce":{
          "type":"number",
          "description":"This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
          "example":1580138601.893
        },
        "signature":{
          "type":"string",
          "description":"The signature obtained by signing the nonce with your private ethereum key.",
          "example":"0xec3606b6b0ee3e28b66803f65aafec4dfe9d4e49be68270fa7275dd8435349c45574c0476edd99641bc13523985ad0b29924f0d4204ce56bc6af00874a0126dc00"
        },
        "symbol":{
          "type":"string",
          "description":"Specifies the trading pair.",
          "example":"ETH:USD"
        }
      },
      "required":[
        "nonce",
        "signature"
      ]
    },
    "openOrdersResponse":{
      "type":"array",
      "items":{
        "$ref":"#/definitions/getOrderResponse"
      }
    },
    "orderHistoryPayload":{
      "type":"object",
      "properties":{
        "nonce":{
          "type":"number",
          "description":"This nonce is used to provide the time until which this nonce is valid. It is presented as seconds since epoch.",
          "example":1580138291.781
        },
        "signature":{
          "type":"string",
          "description":"The signature obtained by signing the nonce with your private ethereum key.",
          "example":"0x20b57db1333c62b71bd1fd3a9eee7fc7ee411641f549149803ac33741d0b29e43783de1518c030a36553a65f15065ef3de11f23dffa33ced9988357daf7c62bf01"
        },
        "symbol":{
          "type":"string",
          "description":"Specifies the trading pair.",
          "example":"ETH:USD"
        }
      },
      "required":[
        "nonce",
        "signature"
      ]
    },
    "meta":{
      "type":"object",
      "description":"Contains metadata $F15 and auth.",
      "properties":{
        "$F15":{
          "type":"number",
          "example":1
        },
        "auth":{
          "type":"string",
          "example":"0x97ebb3391b30f495ce8cb97857db9b72d3e9dbcb"
        }
      }
    },
    "orderHistoryResponse":{
      "type":"object",
      "properties":{
        "_id":{
          "type":"string",
          "example":"5b56333fd952c07b351c5940"
        },
        "id":{
          "type":"string",
          "example":"1151079509"
        },
        "type":{
          "type":"string",
          "description":"Type of the order. Currently, \"EXCHANGE LIMIT\" is the only type that is supported.",
          "example":"EXCHANGE LIMIT"
        },
        "pair":{
          "type":"string",
          "description":"The trading pair that was used for this order.",
          "example":"ETHUSD"
        },
        "status":{
          "type":"string",
          "description":"The status of the order.",
          "example":"CANCELED"
        },
        "created_at":{
          "type":"string",
          "description":"The date and time when the order was created.",
          "example":"2018-07-21 16:15:58"
        },
        "updated_at":{
          "type":"string",
          "description":"The date and time when the order was last updated.",
          "example":"2018-07-23 19:52:51"
        },
        "user_id":{
          "type":"number",
          "description":"ID of the user who placed the order.",
          "example":5
        },
        "amount":{
          "type":"string",
          "description":"Actual order amount.",
          "example":"-0.10000000"
        },
        "price":{
          "type":"string",
          "description":"Cost per unit.",
          "example":"10000.00000000"
        },
        "originalamount":{
          "type":"string",
          "description":"Original amount specified.",
          "example":"-0.10000000"
        },
        "routing":{
          "type":"string",
          "description":"The exchange through which the order was routed, e.g., Bitfinex (BFX).",
          "example":"BFX"
        },
        "lockedperiod":{
          "type":"number",
          "example":0
        },
        "trailingprice":{
          "type":"string",
          "example":"0.00000000"
        },
        "hidden":{
          "type":"number",
          "example":0
        },
        "vir":{
          "type":"number",
          "example":0
        },
        "maxrate":{
          "type":"string",
          "example":"0.00000000000000000000"
        },
        "place_id":{
          "type":"number",
          "example":0
        },
        "placed_trades":{
          "type":"number",
          "example":0
        },
        "nopayback":{
          "type":"number",
          "example":0
        },
        "avg_price":{
          "type":"string",
          "example":"0.00000000000000000000"
        },
        "active":{
          "type":"number",
          "example":0
        },
        "fiat_currency":{
          "type":"string",
          "description":"Chosen fiat currency.",
          "example":"USD"
        },
        "cid":{
          "type":"string",
          "example":"58558087372"
        },
        "cid_date":{
          "type":"string",
          "example":"2018-07-21"
        },
        "mseq":{
          "type":"string",
          "example":"2"
        },
        "gid":{
          "type":"number",
          "example":0
        },
        "flags":{
          "type":"number",
          "example":0
        },
        "price_aux_limit":{
          "type":"string",
          "example":"0.00000000"
        },
        "type_prev":{
          "type":"number",
          "example":0
        },
        "tif":{
          "type":"string",
          "example":"3570"
        },
        "vPair":{
          "type":"string",
          "example":"ETHUSD"
        },
        "meta":{
          "$ref":"#/definitions/meta"
        },
        "symbol":{
          "type":"string",
          "description":"Selected trading pair.",
          "example":"tETHUSD"
        },
        "t":{
          "type":"number",
          "description":"Unix timestamp.",
          "example":1532375571000
        }
      }
    },
    "cancelOrderPayload":{
      "type":"object",
      "properties":{
        "orderId":{
          "type":"string",
          "description":"The order ID.",
          "example":"d7c8b9"
        },
        "nonce":{
          "type":"number"
        },
        "signature":{
          "type":"string",
          "description":"The signed hash (signature) received during the pre-registration process.",
          "example":"0x0277b6e85ffdfb8cdc34c89b8b60c42a1a96a57e1b528ca3ff203b2dac8c9a200dbedd5ab8d2ed7ef19e915daf00327db91c1f5a1988666089e6b8420881699501"
        }
      },
      "required":[
        "orderId",
        "nonce",
        "signature"
      ]
    },
    "cancelOrderResponse":{
      "type":"object",
      "properties":{
        "orderId":{
          "type":"string",
          "description":"The order ID.",
          "example":"d7c8b9"
        }
      }
    },
    "starkPublicKey":{
      "type":"object",
      "description":"The Stark public key. Both the \"x\" and \"y\" part are required.",
      "example":{
        "x":"6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075",
        "y":"58f7ce5eb6eb5bd24f70394622b1f4d2c54ebca317a3e61bf9f349dccf166cf"
      },
      "properties":{
        "x":{
          "type":"string",
          "description":"The \"x\" part of the Stark public key."
        },
        "y":{
          "type":"string",
          "description":"The \"y\" part of the Stark public key."
        }
      }
    },
    "starkSignature":{
      "type":"object",
      "description":"Stark signature consisting of consisting of \"r\", \"s\" and the recovery parameter.",
      "example":{
        "r":"1f38f551d798562c16d28733c7e3ff6850898d82f0ac9ccd39d373303b1778c",
        "s":"518560420e52a37e9f580f024fc0fe8572cb2f5437a839075bbf4b2b123d572",
        "recoveryParam":1
      },
      "properties":{
        "r":{
          "type":"string",
          "description":"The \"r\" part of the Stark signature."
        },
        "s":{
          "type":"string",
          "description":"The \"s\" part of the Stark signature."
        },
        "recoveryParam":{
          "type":"number",
          "description":"The recovery parameter of the Stark signature."
        }
      }
    },
    "depositPayload":{
      "type":"object",
      "properties":{
        "token":{
          "type":"string",
          "description":"The token for which the deposit was made.",
          "example":"ZRX"
        },
        "amount":{
          "type":"number",
          "description":"The deposit amount.",
          "example":1
        },
        "nonce":{
          "type":"number"
        },
        "starkPublicKey":{
          "$ref":"#/definitions/starkPublicKey"
        },
        "starkSignature":{
          "$ref":"#/definitions/starkSignature"
        },
        "starkVaultId":{
          "type":"number",
          "description":"The Stark vault ID.",
          "example":1000003
        },
        "expireTime":{
          "type":"number"
        }
      },
      "required":[
        "token",
        "amount",
        "nonce",
        "starkPublicKey",
        "starkSignature",
        "starkVaultId",
        "expireTime"
      ]
    },
    "depositResponse":{
      "type":"object",
      "properties":{
        "isPostedOffchain":{
          "type":"boolean",
          "description":"Flag to indicate if the deposit was posted off chain.",
          "example":false
        },
        "isConfirmedOnChain":{
          "type":"boolean",
          "description":"Flag to indicate if the deposit was confirmed off chain.",
          "example":true
        },
        "_id":{
          "type":"string",
          "example":"5e335f88bdcd70001e52d0a7"
        },
        "starkVaultId":{
          "type":"number",
          "description":"The Stark vault ID.",
          "example":1000003
        },
        "starkKey":{
          "type":"string",
          "description":"The Stark public key.",
          "example":"6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075"
        },
        "starkMessage":{
          "type":"string",
          "description":"Stark Message ID.",
          "example":"1d980821dab7adf8f422a4754b031585e663bb1f70d8adb550cde8a628fdbbb"
        },
        "starkSignature":{
          "$ref":"#/definitions/starkSignature"
        },
        "starkTokenId":{
          "type":"string",
          "description":"The Stark token ID.",
          "example":"0x3"
        },
        "amount":{
          "type":"number",
          "description":"The amount that was deposited.",
          "example":1
        },
        "ethAddress":{
          "type":"string",
          "description":"Ethereum public address of the user.",
          "example":"0x341e46a49f15785373ede443df0220dea6a41bbc"
        },
        "createdAt":{
          "type":"string",
          "description":"The date and time of the deposit.",
          "example":"2020-01-30T22:58:16.720Z"
        }
      },
      "required":[
        "starkSignature"
      ]
    },
    "preRegisterPayload":{
      "type":"object",
      "properties":{
        "starkKey":{
          "type":"string",
          "description":"The Stark public key.",
          "example":"6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075"
        },
        "ethAddress":{
          "type":"string",
          "description":"The Ethereum public address required for the pre-registration.",
          "example":"0x341E46a49F15785373edE443Df0220DEa6a41Bbc"
        }
      },
      "required":[
        "starkKey",
        "ethAddress"
      ]
    },
    "preRegisterResponse":{
      "type":"object",
      "properties":{
        "deFiSignature":{
          "type":"string",
          "description":"This signature hash is required in order to complete the registration process. This signature states that DeversiFi is aware of the binding between a Stark key and ethereum address.",
          "example":"0x187d2b7927af5b4902f204e3e1dbe14bb6af28fa30d61d4d9c6a4cf5f4a985547d9150befbd1a4ee82ded653cf7b2988591c28cdaccdbc1e4a6adae7ead759d61b"
        }
      }
    },
    "registerPayload":{
      "type":"object",
      "properties":{
        "starkKey":{
          "type":"string",
          "description":"The Stark public key.",
          "example":"6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075"
        },
        "nonce":{
          "type":"number",
          "description":"A user generated nonce.",
          "example":1579783140.807
        },
        "signature":{
          "type":"string",
          "description":"The signed hash (signature) received during the pre-registration process.",
          "example":"0x7e83e5fb1eb382d06906efa984a1cbf9c7a5bd301cbbbfa68d5d23624f9d301358329465291f5b72a9680687badf8f01a474193bd738add3d89e8d7e0e034b2b00"
        }
      },
      "required":[
        "starkKey",
        "nonce",
        "signature"
      ]
    },
    "starkOrder":{
      "type":"object",
      "description":"Stark order related meta information.",
      "properties":{
        "vaultIdSell":{
          "type":"number",
          "description":"The vault ID of the seller."
        },
        "vaultIdBuy":{
          "type":"number",
          "description":"The vault ID of the buyer."
        },
        "amountSell":{
          "type":"string",
          "description":"The total amount to be sold."
        },
        "amountBuy":{
          "type":"string",
          "description":"The total amount to be bought."
        },
        "tokenSell":{
          "type":"string",
          "description":"The Stark token ID for the token being sold."
        },
        "tokenBuy":{
          "type":"string",
          "description":"The Stark token ID for the token being bought."
        },
        "nonce":{
          "type":"number",
          "description":"Nonce value."
        },
        "expirationTimestamp":{
          "type":"number",
          "description":"Expiration timestamp of the order."
        }
      }
    },
    "submitOrderMeta":{
      "type":"object",
      "description":"A set of meta values.",
      "example":{
        "starkOrder":{
          "vaultIdSell":1000002,
          "vaultIdBuy":1000001,
          "amountSell":"97400000",
          "amountBuy":"100000000000000000",
          "tokenSell":"0x2",
          "tokenBuy":"0x1",
          "nonce":0,
          "expirationTimestamp":438947
        },
        "starkMessage":"597f31e19f2273413833ed1408edd7a2c60e9f82422852a1be7d11049be3268",
        "ethAddress":"0x341E46a49F15785373edE443Df0220DEa6a41Bbc",
        "starkPublicKey":{
          "x":"6d840e6d0ecfcbcfa83c0f704439e16c69383d93f51427feb9a4f2d21fbe075",
          "y":"58f7ce5eb6eb5bd24f70394622b1f4d2c54ebca317a3e61bf9f349dccf166cf"
        },
        "starkSignature":{
          "r":"5d14357fcf8f489218de0855267c6f64bc463135debf62680ad796e63cd6d3b",
          "s":"786ab874d91e3a5871134955fcb768914754760a0ada326af67f758f32819cf",
          "recoveryParam":0
        }
      },
      "properties":{
        "starkOrder":{
          "$ref":"#/definitions/starkOrder"
        },
        "starkMessage":{
          "type":"string",
          "description":"Stark Message ID."
        },
        "ethAddress":{
          "type":"string",
          "description":"The Ethereum public address."
        },
        "starkPublicKey":{
          "$ref":"#/definitions/tokens"
        },
        "starkSignature":{
          "$ref":"#/definitions/tokens"
        }
      }
    },
    "Model1":{
      "type":"object",
      "properties":{
        "cid":{
          "type":"string"
        },
        "gid":{
          "type":"string"
        },
        "type":{
          "type":"string",
          "description":"The type of order. Currently only “EXCHANGE_LIMIT” is accepted.",
          "example":"EXCHANGE LIMIT",
          "enum":[
            "EXCHANGE LIMIT",
            "exchange limit",
            "EXCHANGE MARKET",
            "exchange market"
          ]
        },
        "symbol":{
          "type":"string",
          "description":"The trading pair.",
          "example":"ETH:USDT"
        },
        "amount":{
          "type":"number",
          "description":"The token amount to be traded.",
          "example":0.1
        },
        "price":{
          "type":"number",
          "description":"The cost per unit.",
          "example":1000
        },
        "meta":{
          "$ref":"#/definitions/submitOrderMeta"
        },
        "protocol":{
          "type":"string",
          "enum":[
            "stark"
          ]
        },
        "partnerId":{
          "type":"string"
        },
        "feeRate":{
          "type":"string"
        }
      },
      "required":[
        "type",
        "symbol",
        "amount",
        "price",
        "meta"
      ]
    },
    "submitOrderResponse":{
      "type":"object",
      "properties":{
        "type":{
          "type":"string",
          "description":"The order ID.",
          "example":"1a2b3c"
        }
      }
    },
    "withdrawalPayload":{
      "type":"object",
      "properties":{
        "token":{
          "type":"string",
          "description":"The token for which the withdrawal is requested.",
          "example":"ZRX"
        },
        "amount":{
          "type":"number",
          "description":"The withdrawal amount.",
          "example":1
        },
        "nonce":{
          "type":"number"
        },
        "starkPublicKey":{
          "$ref":"#/definitions/starkPublicKey"
        },
        "starkSignature":{
          "$ref":"#/definitions/starkSignature"
        },
        "starkVaultId":{
          "type":"number",
          "description":"The Stark vault ID.",
          "example":1000003
        },
        "expireTime":{
          "type":"number"
        }
      },
      "required":[
        "token",
        "amount",
        "nonce",
        "starkPublicKey",
        "starkSignature",
        "starkVaultId",
        "expireTime"
      ]
    }
  }
}}
